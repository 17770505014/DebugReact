{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// TODO: This type is shared between the reconciler and ReactDOM, but will\n// eventually be lifted out to the renderer.\nimport { isContainerMarkedAsRoot, markContainerAsRoot, unmarkContainerAsRoot } from './ReactDOMComponentTree';\nimport { eagerlyTrapReplayableEvents } from '../events/ReactDOMEventReplaying';\nimport { ELEMENT_NODE, COMMENT_NODE, DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE } from '../shared/HTMLNodeType';\nimport { createContainer, updateContainer } from 'react-reconciler/inline.dom';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport { BlockingRoot, ConcurrentRoot, LegacyRoot } from 'shared/ReactRootTags';\n\nfunction ReactDOMRoot(container, options) {\n  this._internalRoot = createRootImpl(container, ConcurrentRoot, options);\n}\n\nfunction ReactDOMBlockingRoot(container, tag, options) {\n  this._internalRoot = createRootImpl(container, tag, options);\n}\n\nReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (children, callback) {\n  const root = this._internalRoot;\n  const cb = callback === undefined ? null : callback;\n\n  if (__DEV__) {\n    warnOnInvalidCallback(cb, 'render');\n  }\n\n  updateContainer(children, root, null, cb);\n};\n\nReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function (callback) {\n  const root = this._internalRoot;\n  const cb = callback === undefined ? null : callback;\n\n  if (__DEV__) {\n    warnOnInvalidCallback(cb, 'render');\n  }\n\n  const container = root.containerInfo;\n  updateContainer(null, root, null, () => {\n    unmarkContainerAsRoot(container);\n\n    if (cb !== null) {\n      cb();\n    }\n  });\n};\n\nfunction createRootImpl(container, tag, options) {\n  // Tag is either LegacyRoot or Concurrent Root\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks = options != null && options.hydrationOptions || null;\n  const root = createContainer(container, tag, hydrate, hydrationCallbacks);\n  markContainerAsRoot(root.current, container);\n\n  if (hydrate && tag !== LegacyRoot) {\n    const doc = container.nodeType === DOCUMENT_NODE ? container : container.ownerDocument;\n    eagerlyTrapReplayableEvents(doc);\n  }\n\n  return root;\n}\n\nexport function createRoot(container, options) {\n  invariant(isValidContainer(container), 'createRoot(...): Target container is not a DOM element.');\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactDOMRoot(container, options);\n}\nexport function createBlockingRoot(container, options) {\n  invariant(isValidContainer(container), 'createRoot(...): Target container is not a DOM element.');\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactDOMBlockingRoot(container, BlockingRoot, options);\n}\nexport function createLegacyRoot(container, options) {\n  return new ReactDOMBlockingRoot(container, LegacyRoot, options);\n}\nexport function isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n}\nexport function warnOnInvalidCallback(callback, callerName) {\n  if (__DEV__) {\n    warningWithoutStack(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n  }\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        warningWithoutStack(false, 'You are calling ReactDOM.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');\n      } else {\n        warningWithoutStack(false, 'You are calling ReactDOM.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');\n      }\n    }\n  }\n}","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/react-dom/src/client/ReactDOMRoot.js"],"names":["isContainerMarkedAsRoot","markContainerAsRoot","unmarkContainerAsRoot","eagerlyTrapReplayableEvents","ELEMENT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","createContainer","updateContainer","invariant","warningWithoutStack","BlockingRoot","ConcurrentRoot","LegacyRoot","ReactDOMRoot","container","options","_internalRoot","createRootImpl","ReactDOMBlockingRoot","tag","prototype","render","children","callback","root","cb","undefined","__DEV__","warnOnInvalidCallback","unmount","containerInfo","hydrate","hydrationCallbacks","hydrationOptions","current","doc","nodeType","ownerDocument","createRoot","isValidContainer","warnIfReactDOMContainerInDEV","createBlockingRoot","createLegacyRoot","node","nodeValue","callerName","_reactRootContainer"],"mappings":"AAAA;;;;;;;;AAYA;AACA;AAkBA,SACEA,uBADF,EAEEC,mBAFF,EAGEC,qBAHF,QAIO,yBAJP;AAKA,SAAQC,2BAAR,QAA0C,kCAA1C;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,sBAJF,QAKO,wBALP;AAOA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,6BAA/C;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,UAAtC,QAAuD,sBAAvD;;AAEA,SAASC,YAAT,CAAsBC,SAAtB,EAA+CC,OAA/C,EAA4E;AAC1E,OAAKC,aAAL,GAAqBC,cAAc,CAACH,SAAD,EAAYH,cAAZ,EAA4BI,OAA5B,CAAnC;AACD;;AAED,SAASG,oBAAT,CACEJ,SADF,EAEEK,GAFF,EAGEJ,OAHF,EAIE;AACA,OAAKC,aAAL,GAAqBC,cAAc,CAACH,SAAD,EAAYK,GAAZ,EAAiBJ,OAAjB,CAAnC;AACD;;AAEDF,YAAY,CAACO,SAAb,CAAuBC,MAAvB,GAAgCH,oBAAoB,CAACE,SAArB,CAA+BC,MAA/B,GAAwC,UACtEC,QADsE,EAEtEC,QAFsE,EAGhE;AACN,QAAMC,IAAI,GAAG,KAAKR,aAAlB;AACA,QAAMS,EAAE,GAAGF,QAAQ,KAAKG,SAAb,GAAyB,IAAzB,GAAgCH,QAA3C;;AACA,MAAII,OAAJ,EAAa;AACXC,IAAAA,qBAAqB,CAACH,EAAD,EAAK,QAAL,CAArB;AACD;;AACDlB,EAAAA,eAAe,CAACe,QAAD,EAAWE,IAAX,EAAiB,IAAjB,EAAuBC,EAAvB,CAAf;AACD,CAVD;;AAYAZ,YAAY,CAACO,SAAb,CAAuBS,OAAvB,GAAiCX,oBAAoB,CAACE,SAArB,CAA+BS,OAA/B,GAAyC,UACxEN,QADwE,EAElE;AACN,QAAMC,IAAI,GAAG,KAAKR,aAAlB;AACA,QAAMS,EAAE,GAAGF,QAAQ,KAAKG,SAAb,GAAyB,IAAzB,GAAgCH,QAA3C;;AACA,MAAII,OAAJ,EAAa;AACXC,IAAAA,qBAAqB,CAACH,EAAD,EAAK,QAAL,CAArB;AACD;;AACD,QAAMX,SAAS,GAAGU,IAAI,CAACM,aAAvB;AACAvB,EAAAA,eAAe,CAAC,IAAD,EAAOiB,IAAP,EAAa,IAAb,EAAmB,MAAM;AACtCxB,IAAAA,qBAAqB,CAACc,SAAD,CAArB;;AACA,QAAIW,EAAE,KAAK,IAAX,EAAiB;AACfA,MAAAA,EAAE;AACH;AACF,GALc,CAAf;AAMD,CAfD;;AAiBA,SAASR,cAAT,CACEH,SADF,EAEEK,GAFF,EAGEJ,OAHF,EAIE;AACA;AACA,QAAMgB,OAAO,GAAGhB,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACgB,OAAR,KAAoB,IAAvD;AACA,QAAMC,kBAAkB,GACrBjB,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACkB,gBAA5B,IAAiD,IADnD;AAEA,QAAMT,IAAI,GAAGlB,eAAe,CAACQ,SAAD,EAAYK,GAAZ,EAAiBY,OAAjB,EAA0BC,kBAA1B,CAA5B;AACAjC,EAAAA,mBAAmB,CAACyB,IAAI,CAACU,OAAN,EAAepB,SAAf,CAAnB;;AACA,MAAIiB,OAAO,IAAIZ,GAAG,KAAKP,UAAvB,EAAmC;AACjC,UAAMuB,GAAG,GACPrB,SAAS,CAACsB,QAAV,KAAuBhC,aAAvB,GACIU,SADJ,GAEIA,SAAS,CAACuB,aAHhB;AAIApC,IAAAA,2BAA2B,CAACkC,GAAD,CAA3B;AACD;;AACD,SAAOX,IAAP;AACD;;AAED,OAAO,SAASc,UAAT,CACLxB,SADK,EAELC,OAFK,EAGK;AACVP,EAAAA,SAAS,CACP+B,gBAAgB,CAACzB,SAAD,CADT,EAEP,yDAFO,CAAT;AAIA0B,EAAAA,4BAA4B,CAAC1B,SAAD,CAA5B;AACA,SAAO,IAAID,YAAJ,CAAiBC,SAAjB,EAA4BC,OAA5B,CAAP;AACD;AAED,OAAO,SAAS0B,kBAAT,CACL3B,SADK,EAELC,OAFK,EAGK;AACVP,EAAAA,SAAS,CACP+B,gBAAgB,CAACzB,SAAD,CADT,EAEP,yDAFO,CAAT;AAIA0B,EAAAA,4BAA4B,CAAC1B,SAAD,CAA5B;AACA,SAAO,IAAII,oBAAJ,CAAyBJ,SAAzB,EAAoCJ,YAApC,EAAkDK,OAAlD,CAAP;AACD;AAED,OAAO,SAAS2B,gBAAT,CACL5B,SADK,EAELC,OAFK,EAGK;AACV,SAAO,IAAIG,oBAAJ,CAAyBJ,SAAzB,EAAoCF,UAApC,EAAgDG,OAAhD,CAAP;AACD;AAED,OAAO,SAASwB,gBAAT,CAA0BI,IAA1B,EAAgD;AACrD,SAAO,CAAC,EACNA,IAAI,KACHA,IAAI,CAACP,QAAL,KAAkBlC,YAAlB,IACCyC,IAAI,CAACP,QAAL,KAAkBhC,aADnB,IAECuC,IAAI,CAACP,QAAL,KAAkB/B,sBAFnB,IAGEsC,IAAI,CAACP,QAAL,KAAkBjC,YAAlB,IACEwC,IAAD,CAAYC,SAAZ,KAA0B,8BAL1B,CADE,CAAR;AAQD;AAED,OAAO,SAAShB,qBAAT,CACLL,QADK,EAELsB,UAFK,EAGC;AACN,MAAIlB,OAAJ,EAAa;AACXlB,IAAAA,mBAAmB,CACjBc,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAP,KAAoB,UADxB,EAEjB,qEACE,iCAHe,EAIjBsB,UAJiB,EAKjBtB,QALiB,CAAnB;AAOD;AACF;;AAED,SAASiB,4BAAT,CAAsC1B,SAAtC,EAAiD;AAC/C,MAAIa,OAAJ,EAAa;AACX,QAAI7B,uBAAuB,CAACgB,SAAD,CAA3B,EAAwC;AACtC,UAAIA,SAAS,CAACgC,mBAAd,EAAmC;AACjCrC,QAAAA,mBAAmB,CACjB,KADiB,EAEjB,8EACE,qDAHe,CAAnB;AAKD,OAND,MAMO;AACLA,QAAAA,mBAAmB,CACjB,KADiB,EAEjB,+DACE,gEADF,GAEE,sEAJe,CAAnB;AAMD;AACF;AACF;AACF","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DOMContainer} from './ReactDOM';\nimport type {RootTag} from 'shared/ReactRootTags';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n// TODO: This type is shared between the reconciler and ReactDOM, but will\n// eventually be lifted out to the renderer.\nimport type {FiberRoot} from 'react-reconciler/src/ReactFiberRoot';\n\nexport type RootType = {\n  render(children: ReactNodeList, callback: ?() => mixed): void,\n  unmount(callback: ?() => mixed): void,\n\n  _internalRoot: FiberRoot,\n};\n\nexport type RootOptions = {\n  hydrate?: boolean,\n  hydrationOptions?: {\n    onHydrated?: (suspenseNode: Comment) => void,\n    onDeleted?: (suspenseNode: Comment) => void,\n  },\n};\n\nimport {\n  isContainerMarkedAsRoot,\n  markContainerAsRoot,\n  unmarkContainerAsRoot,\n} from './ReactDOMComponentTree';\nimport {eagerlyTrapReplayableEvents} from '../events/ReactDOMEventReplaying';\nimport {\n  ELEMENT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\n\nimport {createContainer, updateContainer} from 'react-reconciler/inline.dom';\nimport invariant from 'shared/invariant';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {BlockingRoot, ConcurrentRoot, LegacyRoot} from 'shared/ReactRootTags';\n\nfunction ReactDOMRoot(container: DOMContainer, options: void | RootOptions) {\n  this._internalRoot = createRootImpl(container, ConcurrentRoot, options);\n}\n\nfunction ReactDOMBlockingRoot(\n  container: DOMContainer,\n  tag: RootTag,\n  options: void | RootOptions,\n) {\n  this._internalRoot = createRootImpl(container, tag, options);\n}\n\nReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function(\n  children: ReactNodeList,\n  callback: ?() => mixed,\n): void {\n  const root = this._internalRoot;\n  const cb = callback === undefined ? null : callback;\n  if (__DEV__) {\n    warnOnInvalidCallback(cb, 'render');\n  }\n  updateContainer(children, root, null, cb);\n};\n\nReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function(\n  callback: ?() => mixed,\n): void {\n  const root = this._internalRoot;\n  const cb = callback === undefined ? null : callback;\n  if (__DEV__) {\n    warnOnInvalidCallback(cb, 'render');\n  }\n  const container = root.containerInfo;\n  updateContainer(null, root, null, () => {\n    unmarkContainerAsRoot(container);\n    if (cb !== null) {\n      cb();\n    }\n  });\n};\n\nfunction createRootImpl(\n  container: DOMContainer,\n  tag: RootTag,\n  options: void | RootOptions,\n) {\n  // Tag is either LegacyRoot or Concurrent Root\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks =\n    (options != null && options.hydrationOptions) || null;\n  const root = createContainer(container, tag, hydrate, hydrationCallbacks);\n  markContainerAsRoot(root.current, container);\n  if (hydrate && tag !== LegacyRoot) {\n    const doc =\n      container.nodeType === DOCUMENT_NODE\n        ? container\n        : container.ownerDocument;\n    eagerlyTrapReplayableEvents(doc);\n  }\n  return root;\n}\n\nexport function createRoot(\n  container: DOMContainer,\n  options?: RootOptions,\n): RootType {\n  invariant(\n    isValidContainer(container),\n    'createRoot(...): Target container is not a DOM element.',\n  );\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactDOMRoot(container, options);\n}\n\nexport function createBlockingRoot(\n  container: DOMContainer,\n  options?: RootOptions,\n): RootType {\n  invariant(\n    isValidContainer(container),\n    'createRoot(...): Target container is not a DOM element.',\n  );\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactDOMBlockingRoot(container, BlockingRoot, options);\n}\n\nexport function createLegacyRoot(\n  container: DOMContainer,\n  options?: RootOptions,\n): RootType {\n  return new ReactDOMBlockingRoot(container, LegacyRoot, options);\n}\n\nexport function isValidContainer(node: mixed): boolean {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (node.nodeType === COMMENT_NODE &&\n        (node: any).nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\nexport function warnOnInvalidCallback(\n  callback: mixed,\n  callerName: string,\n): void {\n  if (__DEV__) {\n    warningWithoutStack(\n      callback === null || typeof callback === 'function',\n      '%s(...): Expected the last optional `callback` argument to be a ' +\n        'function. Instead received: %s.',\n      callerName,\n      callback,\n    );\n  }\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    if (isContainerMarkedAsRoot(container)) {\n      if (container._reactRootContainer) {\n        warningWithoutStack(\n          false,\n          'You are calling ReactDOM.createRoot() on a container that was previously ' +\n            'passed to ReactDOM.render(). This is not supported.',\n        );\n      } else {\n        warningWithoutStack(\n          false,\n          'You are calling ReactDOM.createRoot() on a container that ' +\n            'has already been passed to createRoot() before. Instead, call ' +\n            'root.render() on the existing root instead if you want to update it.',\n        );\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}