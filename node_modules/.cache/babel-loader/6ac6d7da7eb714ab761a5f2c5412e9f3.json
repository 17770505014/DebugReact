{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { REACT_MEMO_TYPE } from 'shared/ReactSymbols';\nimport isValidElementType from 'shared/isValidElementType';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nexport default function memo(type, compare) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      warningWithoutStack(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare\n  };\n}","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/react/src/memo.js"],"names":["REACT_MEMO_TYPE","isValidElementType","warningWithoutStack","memo","type","compare","__DEV__","$$typeof","undefined"],"mappings":"AAAA;;;;;;AAOA,SAAQA,eAAR,QAA8B,qBAA9B;AAEA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AAEA,eAAe,SAASC,IAAT,CACbC,IADa,EAEbC,OAFa,EAGb;AACA,MAAIC,OAAJ,EAAa;AACX,QAAI,CAACL,kBAAkB,CAACG,IAAD,CAAvB,EAA+B;AAC7BF,MAAAA,mBAAmB,CACjB,KADiB,EAEjB,2DACE,cAHe,EAIjBE,IAAI,KAAK,IAAT,GAAgB,MAAhB,GAAyB,OAAOA,IAJf,CAAnB;AAMD;AACF;;AACD,SAAO;AACLG,IAAAA,QAAQ,EAAEP,eADL;AAELI,IAAAA,IAFK;AAGLC,IAAAA,OAAO,EAAEA,OAAO,KAAKG,SAAZ,GAAwB,IAAxB,GAA+BH;AAHnC,GAAP;AAKD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport isValidElementType from 'shared/isValidElementType';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nexport default function memo<Props>(\n  type: React$ElementType,\n  compare?: (oldProps: Props, newProps: Props) => boolean,\n) {\n  if (__DEV__) {\n    if (!isValidElementType(type)) {\n      warningWithoutStack(\n        false,\n        'memo: The first argument must be a component. Instead ' +\n          'received: %s',\n        type === null ? 'null' : typeof type,\n      );\n    }\n  }\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type,\n    compare: compare === undefined ? null : compare,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}