{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE } from 'shared/ReactSymbols';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nexport default function forwardRef(render) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      warningWithoutStack(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      warningWithoutStack(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      warningWithoutStack( // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      render.length === 0 || render.length === 2, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n    }\n\n    if (render != null) {\n      warningWithoutStack(render.defaultProps == null && render.propTypes == null, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render\n  };\n}","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/react/src/forwardRef.js"],"names":["REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","warningWithoutStack","forwardRef","render","__DEV__","$$typeof","length","defaultProps","propTypes"],"mappings":"AAAA;;;;;;AAOA,SAAQA,sBAAR,EAAgCC,eAAhC,QAAsD,qBAAtD;AAEA,OAAOC,mBAAP,MAAgC,4BAAhC;AAEA,eAAe,SAASC,UAAT,CACbC,MADa,EAEb;AACA,MAAIC,OAAJ,EAAa;AACX,QAAID,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACE,QAAP,KAAoBL,eAA1C,EAA2D;AACzDC,MAAAA,mBAAmB,CACjB,KADiB,EAEjB,iEACE,mDADF,GAEE,wBAJe,CAAnB;AAMD,KAPD,MAOO,IAAI,OAAOE,MAAP,KAAkB,UAAtB,EAAkC;AACvCF,MAAAA,mBAAmB,CACjB,KADiB,EAEjB,yDAFiB,EAGjBE,MAAM,KAAK,IAAX,GAAkB,MAAlB,GAA2B,OAAOA,MAHjB,CAAnB;AAKD,KANM,MAMA;AACLF,MAAAA,mBAAmB,EACjB;AACAE,MAAAA,MAAM,CAACG,MAAP,KAAkB,CAAlB,IAAuBH,MAAM,CAACG,MAAP,KAAkB,CAFxB,EAGjB,8EAHiB,EAIjBH,MAAM,CAACG,MAAP,KAAkB,CAAlB,GACI,0CADJ,GAEI,6CANa,CAAnB;AAQD;;AAED,QAAIH,MAAM,IAAI,IAAd,EAAoB;AAClBF,MAAAA,mBAAmB,CACjBE,MAAM,CAACI,YAAP,IAAuB,IAAvB,IAA+BJ,MAAM,CAACK,SAAP,IAAoB,IADlC,EAEjB,2EACE,8CAHe,CAAnB;AAKD;AACF;;AAED,SAAO;AACLH,IAAAA,QAAQ,EAAEN,sBADL;AAELI,IAAAA;AAFK,GAAP;AAID","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\n\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nexport default function forwardRef<Props, ElementType: React$ElementType>(\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\n) {\n  if (__DEV__) {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      warningWithoutStack(\n        false,\n        'forwardRef requires a render function but received a `memo` ' +\n          'component. Instead of forwardRef(memo(...)), use ' +\n          'memo(forwardRef(...)).',\n      );\n    } else if (typeof render !== 'function') {\n      warningWithoutStack(\n        false,\n        'forwardRef requires a render function but was given %s.',\n        render === null ? 'null' : typeof render,\n      );\n    } else {\n      warningWithoutStack(\n        // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n        render.length === 0 || render.length === 2,\n        'forwardRef render functions accept exactly two parameters: props and ref. %s',\n        render.length === 1\n          ? 'Did you forget to use the ref parameter?'\n          : 'Any additional parameter will be undefined.',\n      );\n    }\n\n    if (render != null) {\n      warningWithoutStack(\n        render.defaultProps == null && render.propTypes == null,\n        'forwardRef render functions do not support propTypes or defaultProps. ' +\n          'Did you accidentally pass a React component?',\n      );\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}