{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// TODO: This type is shared between the reconciler and ReactDOM, but will\n// eventually be lifted out to the renderer.\nimport '../shared/checkReact';\nimport './ReactDOMClientInjection';\nimport { computeUniqueAsyncExpiration, findHostInstanceWithNoPortals, updateContainerAtExpirationTime, flushRoot, createContainer, updateContainer, batchedEventUpdates, batchedUpdates, unbatchedUpdates, discreteUpdates, flushDiscreteUpdates, flushSync, flushControlled, injectIntoDevTools, getPublicRootInstance, findHostInstance, findHostInstanceWithWarning, flushPassiveEffects, IsThisRendererActing } from 'react-reconciler/inline.dom';\nimport { createPortal as createPortalImpl } from 'shared/ReactPortal';\nimport { canUseDOM } from 'shared/ExecutionEnvironment';\nimport { setBatchingImplementation } from 'legacy-events/ReactGenericBatching';\nimport { setRestoreImplementation, enqueueStateRestore, restoreStateIfNeeded } from 'legacy-events/ReactControlledComponent';\nimport { injection as EventPluginHubInjection } from 'legacy-events/EventPluginHub';\nimport { runEventsInBatch } from 'legacy-events/EventBatching';\nimport { eventNameDispatchConfigs } from 'legacy-events/EventPluginRegistry';\nimport { accumulateTwoPhaseDispatches, accumulateDirectDispatches } from 'legacy-events/EventPropagators';\nimport { LegacyRoot, ConcurrentRoot, BatchedRoot } from 'shared/ReactRootTags';\nimport { has as hasInstance } from 'shared/ReactInstanceMap';\nimport ReactVersion from 'shared/ReactVersion';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport lowPriorityWarning from 'shared/lowPriorityWarning';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport { enableStableConcurrentModeAPIs } from 'shared/ReactFeatureFlags';\nimport { getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, getClosestInstanceFromNode, markContainerAsRoot } from './ReactDOMComponentTree';\nimport { restoreControlledState } from './ReactDOMComponent';\nimport { dispatchEvent } from '../events/ReactDOMEventListener';\nimport { ELEMENT_NODE, COMMENT_NODE, DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE } from '../shared/HTMLNodeType';\nimport { ROOT_ATTRIBUTE_NAME } from '../shared/DOMProperty';\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nlet topLevelUpdateWarnings;\nlet warnOnInvalidCallback;\nlet didWarnAboutUnstableCreatePortal = false;\n\nif (__DEV__) {\n  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype\n  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype\n  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {\n    warningWithoutStack(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n  }\n\n  topLevelUpdateWarnings = container => {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);\n\n      if (hostInstance) {\n        warningWithoutStack(hostInstance.parentNode === container, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');\n      }\n    }\n\n    const isRootRenderedBySomeReact = !!container._reactRootContainer;\n    const rootEl = getReactRootElementInContainer(container);\n    const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n    warningWithoutStack(!hasNonRootReactChild || isRootRenderedBySomeReact, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');\n    warningWithoutStack(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');\n  };\n\n  warnOnInvalidCallback = function (callback, callerName) {\n    warningWithoutStack(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);\n  };\n}\n\nsetRestoreImplementation(restoreControlledState);\n\nfunction ReactBatch(root) {\n  const expirationTime = computeUniqueAsyncExpiration();\n  this._expirationTime = expirationTime;\n  this._root = root;\n  this._next = null;\n  this._callbacks = null;\n  this._didComplete = false;\n  this._hasChildren = false;\n  this._children = null;\n  this._defer = true;\n}\n\nReactBatch.prototype.render = function (children) {\n  invariant(this._defer, 'batch.render: Cannot render a batch that already committed.');\n  this._hasChildren = true;\n  this._children = children;\n  const internalRoot = this._root._internalRoot;\n  const expirationTime = this._expirationTime;\n  const work = new ReactWork();\n  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, null, work._onCommit);\n  return work;\n};\n\nReactBatch.prototype.then = function (onComplete) {\n  if (this._didComplete) {\n    onComplete();\n    return;\n  }\n\n  let callbacks = this._callbacks;\n\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n\n  callbacks.push(onComplete);\n};\n\nReactBatch.prototype.commit = function () {\n  const internalRoot = this._root._internalRoot;\n  let firstBatch = internalRoot.firstBatch;\n  invariant(this._defer && firstBatch !== null, 'batch.commit: Cannot commit a batch multiple times.');\n\n  if (!this._hasChildren) {\n    // This batch is empty. Return.\n    this._next = null;\n    this._defer = false;\n    return;\n  }\n\n  let expirationTime = this._expirationTime; // Ensure this is the first batch in the list.\n\n  if (firstBatch !== this) {\n    // This batch is not the earliest batch. We need to move it to the front.\n    // Update its expiration time to be the expiration time of the earliest\n    // batch, so that we can flush it without flushing the other batches.\n    if (this._hasChildren) {\n      expirationTime = this._expirationTime = firstBatch._expirationTime; // Rendering this batch again ensures its children will be the final state\n      // when we flush (updates are processed in insertion order: last\n      // update wins).\n      // TODO: This forces a restart. Should we print a warning?\n\n      this.render(this._children);\n    } // Remove the batch from the list.\n\n\n    let previous = null;\n    let batch = firstBatch;\n\n    while (batch !== this) {\n      previous = batch;\n      batch = batch._next;\n    }\n\n    invariant(previous !== null, 'batch.commit: Cannot commit a batch multiple times.');\n    previous._next = batch._next; // Add it to the front.\n\n    this._next = firstBatch;\n    firstBatch = internalRoot.firstBatch = this;\n  } // Synchronously flush all the work up to this batch's expiration time.\n\n\n  this._defer = false;\n  flushRoot(internalRoot, expirationTime); // Pop the batch from the list.\n\n  const next = this._next;\n  this._next = null;\n  firstBatch = internalRoot.firstBatch = next; // Append the next earliest batch's children to the update queue.\n\n  if (firstBatch !== null && firstBatch._hasChildren) {\n    firstBatch.render(firstBatch._children);\n  }\n};\n\nReactBatch.prototype._onComplete = function () {\n  if (this._didComplete) {\n    return;\n  }\n\n  this._didComplete = true;\n  const callbacks = this._callbacks;\n\n  if (callbacks === null) {\n    return;\n  } // TODO: Error handling.\n\n\n  for (let i = 0; i < callbacks.length; i++) {\n    const callback = callbacks[i];\n    callback();\n  }\n};\n\nfunction ReactWork() {\n  this._callbacks = null;\n  this._didCommit = false; // TODO: Avoid need to bind by replacing callbacks in the update queue with\n  // list of Work objects.\n\n  this._onCommit = this._onCommit.bind(this);\n}\n\nReactWork.prototype.then = function (onCommit) {\n  if (this._didCommit) {\n    onCommit();\n    return;\n  }\n\n  let callbacks = this._callbacks;\n\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n\n  callbacks.push(onCommit);\n};\n\nReactWork.prototype._onCommit = function () {\n  if (this._didCommit) {\n    return;\n  }\n\n  this._didCommit = true;\n  const callbacks = this._callbacks;\n\n  if (callbacks === null) {\n    return;\n  } // TODO: Error handling.\n\n\n  for (let i = 0; i < callbacks.length; i++) {\n    const callback = callbacks[i];\n    invariant(typeof callback === 'function', 'Invalid argument passed as callback. Expected a function. Instead ' + 'received: %s', callback);\n    callback();\n  }\n};\n\nfunction ReactSyncRoot(container, tag, options) {\n  // Tag is either LegacyRoot or Concurrent Root\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks = options != null && options.hydrationOptions || null;\n  const root = createContainer(container, tag, hydrate, hydrationCallbacks);\n  this._internalRoot = root;\n  markContainerAsRoot(root.current, container);\n}\n\nfunction ReactRoot(container, options) {\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks = options != null && options.hydrationOptions || null;\n  const root = createContainer(container, ConcurrentRoot, hydrate, hydrationCallbacks);\n  this._internalRoot = root;\n  markContainerAsRoot(root.current, container);\n}\n\nReactRoot.prototype.render = ReactSyncRoot.prototype.render = function (children, callback) {\n  const root = this._internalRoot;\n  const work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n\n  if (__DEV__) {\n    warnOnInvalidCallback(callback, 'render');\n  }\n\n  if (callback !== null) {\n    work.then(callback);\n  }\n\n  updateContainer(children, root, null, work._onCommit);\n  return work;\n};\n\nReactRoot.prototype.unmount = ReactSyncRoot.prototype.unmount = function (callback) {\n  const root = this._internalRoot;\n  const work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n\n  if (__DEV__) {\n    warnOnInvalidCallback(callback, 'render');\n  }\n\n  if (callback !== null) {\n    work.then(callback);\n  }\n\n  updateContainer(null, root, null, work._onCommit);\n  return work;\n}; // Sync roots cannot create batches. Only concurrent ones.\n\n\nReactRoot.prototype.createBatch = function () {\n  const batch = new ReactBatch(this);\n  const expirationTime = batch._expirationTime;\n  const internalRoot = this._internalRoot;\n  const firstBatch = internalRoot.firstBatch;\n\n  if (firstBatch === null) {\n    internalRoot.firstBatch = batch;\n    batch._next = null;\n  } else {\n    // Insert sorted by expiration time then insertion order\n    let insertAfter = null;\n    let insertBefore = firstBatch;\n\n    while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {\n      insertAfter = insertBefore;\n      insertBefore = insertBefore._next;\n    }\n\n    batch._next = insertBefore;\n\n    if (insertAfter !== null) {\n      insertAfter._next = batch;\n    }\n  }\n\n  return batch;\n};\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\n\n\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));\n}\n\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction shouldHydrateDueToLegacyHeuristic(container) {\n  const rootElement = getReactRootElementInContainer(container);\n  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));\n}\n\nsetBatchingImplementation(batchedUpdates, discreteUpdates, flushDiscreteUpdates, batchedEventUpdates);\nlet warnedAboutHydrateAPI = false;\n\nfunction legacyCreateRootFromDOMContainer(container, forceHydrate) {\n  const shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.\n\n  if (!shouldHydrate) {\n    let warned = false;\n    let rootSibling;\n\n    while (rootSibling = container.lastChild) {\n      if (__DEV__) {\n        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {\n          warned = true;\n          warningWithoutStack(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');\n        }\n      }\n\n      container.removeChild(rootSibling);\n    }\n  }\n\n  if (__DEV__) {\n    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {\n      warnedAboutHydrateAPI = true;\n      lowPriorityWarning(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');\n    }\n  } // Legacy roots are not batched.\n\n\n  return new ReactSyncRoot(container, LegacyRoot, shouldHydrate ? {\n    hydrate: true\n  } : undefined);\n}\n\nfunction legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {\n  if (__DEV__) {\n    topLevelUpdateWarnings(container);\n    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');\n  } // TODO: Without `any` type, Flow says \"Property cannot be accessed on any\n  // member of intersection type.\" Whyyyyyy.\n\n\n  let root = container._reactRootContainer;\n  let fiberRoot;\n\n  if (!root) {\n    // Initial mount\n    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);\n    fiberRoot = root._internalRoot;\n\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n\n      callback = function () {\n        const instance = getPublicRootInstance(fiberRoot);\n        originalCallback.call(instance);\n      };\n    } // Initial mount should not be batched.\n\n\n    unbatchedUpdates(() => {\n      updateContainer(children, fiberRoot, parentComponent, callback);\n    });\n  } else {\n    fiberRoot = root._internalRoot;\n\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n\n      callback = function () {\n        const instance = getPublicRootInstance(fiberRoot);\n        originalCallback.call(instance);\n      };\n    } // Update\n\n\n    updateContainer(children, fiberRoot, parentComponent, callback);\n  }\n\n  return getPublicRootInstance(fiberRoot);\n}\n\nfunction createPortal(children, container, key = null) {\n  invariant(isValidContainer(container), 'Target container is not a DOM element.'); // TODO: pass ReactDOM portal implementation as third argument\n\n  return createPortalImpl(children, container, null, key);\n}\n\nconst ReactDOM = {\n  createPortal,\n\n  findDOMNode(componentOrElement) {\n    if (__DEV__) {\n      let owner = ReactCurrentOwner.current;\n\n      if (owner !== null && owner.stateNode !== null) {\n        const warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;\n        warningWithoutStack(warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component');\n        owner.stateNode._warnedAboutRefsInRender = true;\n      }\n    }\n\n    if (componentOrElement == null) {\n      return null;\n    }\n\n    if (componentOrElement.nodeType === ELEMENT_NODE) {\n      return componentOrElement;\n    }\n\n    if (__DEV__) {\n      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n    }\n\n    return findHostInstance(componentOrElement);\n  },\n\n  hydrate(element, container, callback) {\n    invariant(isValidContainer(container), 'Target container is not a DOM element.');\n\n    if (__DEV__) {\n      warningWithoutStack(!container._reactHasBeenPassedToCreateRootDEV, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot');\n    } // TODO: throw or warn if we couldn't hydrate?\n\n\n    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);\n  },\n\n  render(element, container, callback) {\n    invariant(isValidContainer(container), 'Target container is not a DOM element.');\n\n    if (__DEV__) {\n      warningWithoutStack(!container._reactHasBeenPassedToCreateRootDEV, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot');\n    }\n\n    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);\n  },\n\n  unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {\n    invariant(isValidContainer(containerNode), 'Target container is not a DOM element.');\n    invariant(parentComponent != null && hasInstance(parentComponent), 'parentComponent must be a valid React Component');\n    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);\n  },\n\n  unmountComponentAtNode(container) {\n    invariant(isValidContainer(container), 'unmountComponentAtNode(...): Target container is not a DOM element.');\n\n    if (__DEV__) {\n      warningWithoutStack(!container._reactHasBeenPassedToCreateRootDEV, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot');\n    }\n\n    if (container._reactRootContainer) {\n      if (__DEV__) {\n        const rootEl = getReactRootElementInContainer(container);\n        const renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\n        warningWithoutStack(!renderedByDifferentReact, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by another copy of React.');\n      } // Unmount should not be batched.\n\n\n      unbatchedUpdates(() => {\n        legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\n          container._reactRootContainer = null;\n        });\n      }); // If you call unmountComponentAtNode twice in quick succession, you'll\n      // get `true` twice. That's probably fine?\n\n      return true;\n    } else {\n      if (__DEV__) {\n        const rootEl = getReactRootElementInContainer(container);\n        const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl)); // Check if the container itself is a React root node.\n\n        const isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;\n        warningWithoutStack(!hasNonRootReactChild, \"unmountComponentAtNode(): The node you're attempting to unmount \" + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');\n      }\n\n      return false;\n    }\n  },\n\n  // Temporary alias since we already shipped React 16 RC with it.\n  // TODO: remove in React 17.\n  unstable_createPortal(...args) {\n    if (!didWarnAboutUnstableCreatePortal) {\n      didWarnAboutUnstableCreatePortal = true;\n      lowPriorityWarning(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the \"unstable_\" prefix.');\n    }\n\n    return createPortal(...args);\n  },\n\n  unstable_batchedUpdates: batchedUpdates,\n  // TODO remove this legacy method, unstable_discreteUpdates replaces it\n  unstable_interactiveUpdates: (fn, a, b, c) => {\n    flushDiscreteUpdates();\n    return discreteUpdates(fn, a, b, c);\n  },\n  unstable_discreteUpdates: discreteUpdates,\n  unstable_flushDiscreteUpdates: flushDiscreteUpdates,\n  flushSync: flushSync,\n  unstable_createRoot: createRoot,\n  unstable_createSyncRoot: createSyncRoot,\n  unstable_flushControlled: flushControlled,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    // Keep in sync with ReactDOMUnstableNativeDependencies.js\n    // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.\n    Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, EventPluginHubInjection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch, flushPassiveEffects, IsThisRendererActing]\n  }\n};\n\nfunction createRoot(container, options) {\n  const functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';\n  invariant(isValidContainer(container), '%s(...): Target container is not a DOM element.', functionName);\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactRoot(container, options);\n}\n\nfunction createSyncRoot(container, options) {\n  const functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';\n  invariant(isValidContainer(container), '%s(...): Target container is not a DOM element.', functionName);\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactSyncRoot(container, BatchedRoot, options);\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    warningWithoutStack(!container._reactRootContainer, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot');\n    container._reactHasBeenPassedToCreateRootDEV = true;\n  }\n}\n\nif (enableStableConcurrentModeAPIs) {\n  ReactDOM.createRoot = createRoot;\n  ReactDOM.createSyncRoot = createSyncRoot;\n}\n\nconst foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom'\n});\n\nif (__DEV__) {\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\n    // If we're in Chrome or Firefox, provide a download link if not installed.\n    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n      const protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.\n\n      if (/^(https?|file):$/.test(protocol)) {\n        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');\n      }\n    }\n  }\n}\n\nexport default ReactDOM;","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/react-dom/src/client/ReactDOM.js"],"names":["computeUniqueAsyncExpiration","findHostInstanceWithNoPortals","updateContainerAtExpirationTime","flushRoot","createContainer","updateContainer","batchedEventUpdates","batchedUpdates","unbatchedUpdates","discreteUpdates","flushDiscreteUpdates","flushSync","flushControlled","injectIntoDevTools","getPublicRootInstance","findHostInstance","findHostInstanceWithWarning","flushPassiveEffects","IsThisRendererActing","createPortal","createPortalImpl","canUseDOM","setBatchingImplementation","setRestoreImplementation","enqueueStateRestore","restoreStateIfNeeded","injection","EventPluginHubInjection","runEventsInBatch","eventNameDispatchConfigs","accumulateTwoPhaseDispatches","accumulateDirectDispatches","LegacyRoot","ConcurrentRoot","BatchedRoot","has","hasInstance","ReactVersion","ReactSharedInternals","getComponentName","invariant","lowPriorityWarning","warningWithoutStack","enableStableConcurrentModeAPIs","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","getClosestInstanceFromNode","markContainerAsRoot","restoreControlledState","dispatchEvent","ELEMENT_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","ROOT_ATTRIBUTE_NAME","ReactCurrentOwner","topLevelUpdateWarnings","warnOnInvalidCallback","didWarnAboutUnstableCreatePortal","__DEV__","Map","prototype","forEach","Set","clear","container","_reactRootContainer","nodeType","hostInstance","_internalRoot","current","parentNode","isRootRenderedBySomeReact","rootEl","getReactRootElementInContainer","hasNonRootReactChild","tagName","toUpperCase","callback","callerName","ReactBatch","root","expirationTime","_expirationTime","_root","_next","_callbacks","_didComplete","_hasChildren","_children","_defer","render","children","internalRoot","work","ReactWork","_onCommit","then","onComplete","callbacks","push","commit","firstBatch","previous","batch","next","_onComplete","i","length","_didCommit","bind","onCommit","ReactSyncRoot","tag","options","hydrate","hydrationCallbacks","hydrationOptions","ReactRoot","undefined","unmount","createBatch","insertAfter","insertBefore","isValidContainer","node","nodeValue","documentElement","firstChild","shouldHydrateDueToLegacyHeuristic","rootElement","hasAttribute","warnedAboutHydrateAPI","legacyCreateRootFromDOMContainer","forceHydrate","shouldHydrate","warned","rootSibling","lastChild","removeChild","legacyRenderSubtreeIntoContainer","parentComponent","fiberRoot","originalCallback","instance","call","key","ReactDOM","findDOMNode","componentOrElement","owner","stateNode","warnedAboutRefsInRender","_warnedAboutRefsInRender","type","element","_reactHasBeenPassedToCreateRootDEV","unstable_renderSubtreeIntoContainer","containerNode","unmountComponentAtNode","renderedByDifferentReact","isContainerReactRoot","unstable_createPortal","args","unstable_batchedUpdates","unstable_interactiveUpdates","fn","a","b","c","unstable_discreteUpdates","unstable_flushDiscreteUpdates","unstable_createRoot","createRoot","unstable_createSyncRoot","createSyncRoot","unstable_flushControlled","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Events","injectEventPluginsByName","functionName","warnIfReactDOMContainerInDEV","foundDevTools","findFiberByHostInstance","bundleType","version","rendererPackageName","window","top","self","navigator","userAgent","indexOf","protocol","location","test","console","info"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {RootTag} from 'shared/ReactRootTags';\n// TODO: This type is shared between the reconciler and ReactDOM, but will\n// eventually be lifted out to the renderer.\nimport type {\n  FiberRoot,\n  Batch as FiberRootBatch,\n} from 'react-reconciler/src/ReactFiberRoot';\n\nimport '../shared/checkReact';\nimport './ReactDOMClientInjection';\n\nimport {\n  computeUniqueAsyncExpiration,\n  findHostInstanceWithNoPortals,\n  updateContainerAtExpirationTime,\n  flushRoot,\n  createContainer,\n  updateContainer,\n  batchedEventUpdates,\n  batchedUpdates,\n  unbatchedUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  flushSync,\n  flushControlled,\n  injectIntoDevTools,\n  getPublicRootInstance,\n  findHostInstance,\n  findHostInstanceWithWarning,\n  flushPassiveEffects,\n  IsThisRendererActing,\n} from 'react-reconciler/inline.dom';\nimport {createPortal as createPortalImpl} from 'shared/ReactPortal';\nimport {canUseDOM} from 'shared/ExecutionEnvironment';\nimport {setBatchingImplementation} from 'legacy-events/ReactGenericBatching';\nimport {\n  setRestoreImplementation,\n  enqueueStateRestore,\n  restoreStateIfNeeded,\n} from 'legacy-events/ReactControlledComponent';\nimport {injection as EventPluginHubInjection} from 'legacy-events/EventPluginHub';\nimport {runEventsInBatch} from 'legacy-events/EventBatching';\nimport {eventNameDispatchConfigs} from 'legacy-events/EventPluginRegistry';\nimport {\n  accumulateTwoPhaseDispatches,\n  accumulateDirectDispatches,\n} from 'legacy-events/EventPropagators';\nimport {LegacyRoot, ConcurrentRoot, BatchedRoot} from 'shared/ReactRootTags';\nimport {has as hasInstance} from 'shared/ReactInstanceMap';\nimport ReactVersion from 'shared/ReactVersion';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentName from 'shared/getComponentName';\nimport invariant from 'shared/invariant';\nimport lowPriorityWarning from 'shared/lowPriorityWarning';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport {enableStableConcurrentModeAPIs} from 'shared/ReactFeatureFlags';\n\nimport {\n  getInstanceFromNode,\n  getNodeFromInstance,\n  getFiberCurrentPropsFromNode,\n  getClosestInstanceFromNode,\n  markContainerAsRoot,\n} from './ReactDOMComponentTree';\nimport {restoreControlledState} from './ReactDOMComponent';\nimport {dispatchEvent} from '../events/ReactDOMEventListener';\nimport {\n  ELEMENT_NODE,\n  COMMENT_NODE,\n  DOCUMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n} from '../shared/HTMLNodeType';\nimport {ROOT_ATTRIBUTE_NAME} from '../shared/DOMProperty';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet topLevelUpdateWarnings;\nlet warnOnInvalidCallback;\nlet didWarnAboutUnstableCreatePortal = false;\n\nif (__DEV__) {\n  if (\n    typeof Map !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Map has no prototype\n    Map.prototype == null ||\n    typeof Map.prototype.forEach !== 'function' ||\n    typeof Set !== 'function' ||\n    // $FlowIssue Flow incorrectly thinks Set has no prototype\n    Set.prototype == null ||\n    typeof Set.prototype.clear !== 'function' ||\n    typeof Set.prototype.forEach !== 'function'\n  ) {\n    warningWithoutStack(\n      false,\n      'React depends on Map and Set built-in types. Make sure that you load a ' +\n        'polyfill in older browsers. https://fb.me/react-polyfills',\n    );\n  }\n\n  topLevelUpdateWarnings = (container: DOMContainer) => {\n    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {\n      const hostInstance = findHostInstanceWithNoPortals(\n        container._reactRootContainer._internalRoot.current,\n      );\n      if (hostInstance) {\n        warningWithoutStack(\n          hostInstance.parentNode === container,\n          'render(...): It looks like the React-rendered content of this ' +\n            'container was removed without using React. This is not ' +\n            'supported and will cause errors. Instead, call ' +\n            'ReactDOM.unmountComponentAtNode to empty a container.',\n        );\n      }\n    }\n\n    const isRootRenderedBySomeReact = !!container._reactRootContainer;\n    const rootEl = getReactRootElementInContainer(container);\n    const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n    warningWithoutStack(\n      !hasNonRootReactChild || isRootRenderedBySomeReact,\n      'render(...): Replacing React-rendered children with a new root ' +\n        'component. If you intended to update the children of this node, ' +\n        'you should instead have the existing children update their state ' +\n        'and render the new components instead of calling ReactDOM.render.',\n    );\n\n    warningWithoutStack(\n      container.nodeType !== ELEMENT_NODE ||\n        !((container: any): Element).tagName ||\n        ((container: any): Element).tagName.toUpperCase() !== 'BODY',\n      'render(): Rendering components directly into document.body is ' +\n        'discouraged, since its children are often manipulated by third-party ' +\n        'scripts and browser extensions. This may lead to subtle ' +\n        'reconciliation issues. Try rendering into a container element created ' +\n        'for your app.',\n    );\n  };\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    warningWithoutStack(\n      callback === null || typeof callback === 'function',\n      '%s(...): Expected the last optional `callback` argument to be a ' +\n        'function. Instead received: %s.',\n      callerName,\n      callback,\n    );\n  };\n}\n\nsetRestoreImplementation(restoreControlledState);\n\nexport type DOMContainer =\n  | (Element & {\n      _reactRootContainer: ?(_ReactRoot | _ReactSyncRoot),\n      _reactHasBeenPassedToCreateRootDEV: ?boolean,\n    })\n  | (Document & {\n      _reactRootContainer: ?(_ReactRoot | _ReactSyncRoot),\n      _reactHasBeenPassedToCreateRootDEV: ?boolean,\n    });\n\ntype Batch = FiberRootBatch & {\n  render(children: ReactNodeList): Work,\n  then(onComplete: () => mixed): void,\n  commit(): void,\n\n  // The ReactRoot constructor is hoisted but the prototype methods are not. If\n  // we move ReactRoot to be above ReactBatch, the inverse error occurs.\n  // $FlowFixMe Hoisting issue.\n  _root: _ReactRoot | _ReactSyncRoot,\n  _hasChildren: boolean,\n  _children: ReactNodeList,\n\n  _callbacks: Array<() => mixed> | null,\n  _didComplete: boolean,\n};\n\ntype _ReactSyncRoot = {\n  render(children: ReactNodeList, callback: ?() => mixed): Work,\n  unmount(callback: ?() => mixed): Work,\n\n  _internalRoot: FiberRoot,\n};\n\ntype _ReactRoot = _ReactSyncRoot & {\n  createBatch(): Batch,\n};\n\nfunction ReactBatch(root: _ReactRoot | _ReactSyncRoot) {\n  const expirationTime = computeUniqueAsyncExpiration();\n  this._expirationTime = expirationTime;\n  this._root = root;\n  this._next = null;\n  this._callbacks = null;\n  this._didComplete = false;\n  this._hasChildren = false;\n  this._children = null;\n  this._defer = true;\n}\nReactBatch.prototype.render = function(children: ReactNodeList) {\n  invariant(\n    this._defer,\n    'batch.render: Cannot render a batch that already committed.',\n  );\n  this._hasChildren = true;\n  this._children = children;\n  const internalRoot = this._root._internalRoot;\n  const expirationTime = this._expirationTime;\n  const work = new ReactWork();\n  updateContainerAtExpirationTime(\n    children,\n    internalRoot,\n    null,\n    expirationTime,\n    null,\n    work._onCommit,\n  );\n  return work;\n};\nReactBatch.prototype.then = function(onComplete: () => mixed) {\n  if (this._didComplete) {\n    onComplete();\n    return;\n  }\n  let callbacks = this._callbacks;\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n  callbacks.push(onComplete);\n};\nReactBatch.prototype.commit = function() {\n  const internalRoot = this._root._internalRoot;\n  let firstBatch = internalRoot.firstBatch;\n  invariant(\n    this._defer && firstBatch !== null,\n    'batch.commit: Cannot commit a batch multiple times.',\n  );\n\n  if (!this._hasChildren) {\n    // This batch is empty. Return.\n    this._next = null;\n    this._defer = false;\n    return;\n  }\n\n  let expirationTime = this._expirationTime;\n\n  // Ensure this is the first batch in the list.\n  if (firstBatch !== this) {\n    // This batch is not the earliest batch. We need to move it to the front.\n    // Update its expiration time to be the expiration time of the earliest\n    // batch, so that we can flush it without flushing the other batches.\n    if (this._hasChildren) {\n      expirationTime = this._expirationTime = firstBatch._expirationTime;\n      // Rendering this batch again ensures its children will be the final state\n      // when we flush (updates are processed in insertion order: last\n      // update wins).\n      // TODO: This forces a restart. Should we print a warning?\n      this.render(this._children);\n    }\n\n    // Remove the batch from the list.\n    let previous = null;\n    let batch = firstBatch;\n    while (batch !== this) {\n      previous = batch;\n      batch = batch._next;\n    }\n    invariant(\n      previous !== null,\n      'batch.commit: Cannot commit a batch multiple times.',\n    );\n    previous._next = batch._next;\n\n    // Add it to the front.\n    this._next = firstBatch;\n    firstBatch = internalRoot.firstBatch = this;\n  }\n\n  // Synchronously flush all the work up to this batch's expiration time.\n  this._defer = false;\n  flushRoot(internalRoot, expirationTime);\n\n  // Pop the batch from the list.\n  const next = this._next;\n  this._next = null;\n  firstBatch = internalRoot.firstBatch = next;\n\n  // Append the next earliest batch's children to the update queue.\n  if (firstBatch !== null && firstBatch._hasChildren) {\n    firstBatch.render(firstBatch._children);\n  }\n};\nReactBatch.prototype._onComplete = function() {\n  if (this._didComplete) {\n    return;\n  }\n  this._didComplete = true;\n  const callbacks = this._callbacks;\n  if (callbacks === null) {\n    return;\n  }\n  // TODO: Error handling.\n  for (let i = 0; i < callbacks.length; i++) {\n    const callback = callbacks[i];\n    callback();\n  }\n};\n\ntype Work = {\n  then(onCommit: () => mixed): void,\n  _onCommit: () => void,\n  _callbacks: Array<() => mixed> | null,\n  _didCommit: boolean,\n};\n\nfunction ReactWork() {\n  this._callbacks = null;\n  this._didCommit = false;\n  // TODO: Avoid need to bind by replacing callbacks in the update queue with\n  // list of Work objects.\n  this._onCommit = this._onCommit.bind(this);\n}\nReactWork.prototype.then = function(onCommit: () => mixed): void {\n  if (this._didCommit) {\n    onCommit();\n    return;\n  }\n  let callbacks = this._callbacks;\n  if (callbacks === null) {\n    callbacks = this._callbacks = [];\n  }\n  callbacks.push(onCommit);\n};\nReactWork.prototype._onCommit = function(): void {\n  if (this._didCommit) {\n    return;\n  }\n  this._didCommit = true;\n  const callbacks = this._callbacks;\n  if (callbacks === null) {\n    return;\n  }\n  // TODO: Error handling.\n  for (let i = 0; i < callbacks.length; i++) {\n    const callback = callbacks[i];\n    invariant(\n      typeof callback === 'function',\n      'Invalid argument passed as callback. Expected a function. Instead ' +\n        'received: %s',\n      callback,\n    );\n    callback();\n  }\n};\n\nfunction ReactSyncRoot(\n  container: DOMContainer,\n  tag: RootTag,\n  options: void | RootOptions,\n) {\n  // Tag is either LegacyRoot or Concurrent Root\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks =\n    (options != null && options.hydrationOptions) || null;\n  const root = createContainer(container, tag, hydrate, hydrationCallbacks);\n  this._internalRoot = root;\n  markContainerAsRoot(root.current, container);\n}\n\nfunction ReactRoot(container: DOMContainer, options: void | RootOptions) {\n  const hydrate = options != null && options.hydrate === true;\n  const hydrationCallbacks =\n    (options != null && options.hydrationOptions) || null;\n  const root = createContainer(\n    container,\n    ConcurrentRoot,\n    hydrate,\n    hydrationCallbacks,\n  );\n  this._internalRoot = root;\n  markContainerAsRoot(root.current, container);\n}\n\nReactRoot.prototype.render = ReactSyncRoot.prototype.render = function(\n  children: ReactNodeList,\n  callback: ?() => mixed,\n): Work {\n  const root = this._internalRoot;\n  const work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  if (__DEV__) {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(children, root, null, work._onCommit);\n  return work;\n};\n\nReactRoot.prototype.unmount = ReactSyncRoot.prototype.unmount = function(\n  callback: ?() => mixed,\n): Work {\n  const root = this._internalRoot;\n  const work = new ReactWork();\n  callback = callback === undefined ? null : callback;\n  if (__DEV__) {\n    warnOnInvalidCallback(callback, 'render');\n  }\n  if (callback !== null) {\n    work.then(callback);\n  }\n  updateContainer(null, root, null, work._onCommit);\n  return work;\n};\n\n// Sync roots cannot create batches. Only concurrent ones.\nReactRoot.prototype.createBatch = function(): Batch {\n  const batch = new ReactBatch(this);\n  const expirationTime = batch._expirationTime;\n\n  const internalRoot = this._internalRoot;\n  const firstBatch = internalRoot.firstBatch;\n  if (firstBatch === null) {\n    internalRoot.firstBatch = batch;\n    batch._next = null;\n  } else {\n    // Insert sorted by expiration time then insertion order\n    let insertAfter = null;\n    let insertBefore = firstBatch;\n    while (\n      insertBefore !== null &&\n      insertBefore._expirationTime >= expirationTime\n    ) {\n      insertAfter = insertBefore;\n      insertBefore = insertBefore._next;\n    }\n    batch._next = insertBefore;\n    if (insertAfter !== null) {\n      insertAfter._next = batch;\n    }\n  }\n\n  return batch;\n};\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(\n    node &&\n    (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n      (node.nodeType === COMMENT_NODE &&\n        node.nodeValue === ' react-mount-point-unstable '))\n  );\n}\n\nfunction getReactRootElementInContainer(container: any) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOCUMENT_NODE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction shouldHydrateDueToLegacyHeuristic(container) {\n  const rootElement = getReactRootElementInContainer(container);\n  return !!(\n    rootElement &&\n    rootElement.nodeType === ELEMENT_NODE &&\n    rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME)\n  );\n}\n\nsetBatchingImplementation(\n  batchedUpdates,\n  discreteUpdates,\n  flushDiscreteUpdates,\n  batchedEventUpdates,\n);\n\nlet warnedAboutHydrateAPI = false;\n\nfunction legacyCreateRootFromDOMContainer(\n  container: DOMContainer,\n  forceHydrate: boolean,\n): _ReactSyncRoot {\n  const shouldHydrate =\n    forceHydrate || shouldHydrateDueToLegacyHeuristic(container);\n  // First clear any existing content.\n  if (!shouldHydrate) {\n    let warned = false;\n    let rootSibling;\n    while ((rootSibling = container.lastChild)) {\n      if (__DEV__) {\n        if (\n          !warned &&\n          rootSibling.nodeType === ELEMENT_NODE &&\n          (rootSibling: any).hasAttribute(ROOT_ATTRIBUTE_NAME)\n        ) {\n          warned = true;\n          warningWithoutStack(\n            false,\n            'render(): Target node has markup rendered by React, but there ' +\n              'are unrelated nodes as well. This is most commonly caused by ' +\n              'white-space inserted around server-rendered markup.',\n          );\n        }\n      }\n      container.removeChild(rootSibling);\n    }\n  }\n  if (__DEV__) {\n    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {\n      warnedAboutHydrateAPI = true;\n      lowPriorityWarning(\n        false,\n        'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' +\n          'will stop working in React v17. Replace the ReactDOM.render() call ' +\n          'with ReactDOM.hydrate() if you want React to attach to the server HTML.',\n      );\n    }\n  }\n\n  // Legacy roots are not batched.\n  return new ReactSyncRoot(\n    container,\n    LegacyRoot,\n    shouldHydrate\n      ? {\n          hydrate: true,\n        }\n      : undefined,\n  );\n}\n\nfunction legacyRenderSubtreeIntoContainer(\n  parentComponent: ?React$Component<any, any>,\n  children: ReactNodeList,\n  container: DOMContainer,\n  forceHydrate: boolean,\n  callback: ?Function,\n) {\n  if (__DEV__) {\n    topLevelUpdateWarnings(container);\n    warnOnInvalidCallback(callback === undefined ? null : callback, 'render');\n  }\n\n  // TODO: Without `any` type, Flow says \"Property cannot be accessed on any\n  // member of intersection type.\" Whyyyyyy.\n  let root: _ReactSyncRoot = (container._reactRootContainer: any);\n  let fiberRoot;\n  if (!root) {\n    // Initial mount\n    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(\n      container,\n      forceHydrate,\n    );\n    fiberRoot = root._internalRoot;\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function() {\n        const instance = getPublicRootInstance(fiberRoot);\n        originalCallback.call(instance);\n      };\n    }\n    // Initial mount should not be batched.\n    unbatchedUpdates(() => {\n      updateContainer(children, fiberRoot, parentComponent, callback);\n    });\n  } else {\n    fiberRoot = root._internalRoot;\n    if (typeof callback === 'function') {\n      const originalCallback = callback;\n      callback = function() {\n        const instance = getPublicRootInstance(fiberRoot);\n        originalCallback.call(instance);\n      };\n    }\n    // Update\n    updateContainer(children, fiberRoot, parentComponent, callback);\n  }\n  return getPublicRootInstance(fiberRoot);\n}\n\nfunction createPortal(\n  children: ReactNodeList,\n  container: DOMContainer,\n  key: ?string = null,\n) {\n  invariant(\n    isValidContainer(container),\n    'Target container is not a DOM element.',\n  );\n  // TODO: pass ReactDOM portal implementation as third argument\n  return createPortalImpl(children, container, null, key);\n}\n\nconst ReactDOM: Object = {\n  createPortal,\n\n  findDOMNode(\n    componentOrElement: Element | ?React$Component<any, any>,\n  ): null | Element | Text {\n    if (__DEV__) {\n      let owner = (ReactCurrentOwner.current: any);\n      if (owner !== null && owner.stateNode !== null) {\n        const warnedAboutRefsInRender =\n          owner.stateNode._warnedAboutRefsInRender;\n        warningWithoutStack(\n          warnedAboutRefsInRender,\n          '%s is accessing findDOMNode inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentName(owner.type) || 'A component',\n        );\n        owner.stateNode._warnedAboutRefsInRender = true;\n      }\n    }\n    if (componentOrElement == null) {\n      return null;\n    }\n    if ((componentOrElement: any).nodeType === ELEMENT_NODE) {\n      return (componentOrElement: any);\n    }\n    if (__DEV__) {\n      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');\n    }\n    return findHostInstance(componentOrElement);\n  },\n\n  hydrate(element: React$Node, container: DOMContainer, callback: ?Function) {\n    invariant(\n      isValidContainer(container),\n      'Target container is not a DOM element.',\n    );\n    if (__DEV__) {\n      warningWithoutStack(\n        !container._reactHasBeenPassedToCreateRootDEV,\n        'You are calling ReactDOM.hydrate() on a container that was previously ' +\n          'passed to ReactDOM.%s(). This is not supported. ' +\n          'Did you mean to call createRoot(container, {hydrate: true}).render(element)?',\n        enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n      );\n    }\n    // TODO: throw or warn if we couldn't hydrate?\n    return legacyRenderSubtreeIntoContainer(\n      null,\n      element,\n      container,\n      true,\n      callback,\n    );\n  },\n\n  render(\n    element: React$Element<any>,\n    container: DOMContainer,\n    callback: ?Function,\n  ) {\n    invariant(\n      isValidContainer(container),\n      'Target container is not a DOM element.',\n    );\n    if (__DEV__) {\n      warningWithoutStack(\n        !container._reactHasBeenPassedToCreateRootDEV,\n        'You are calling ReactDOM.render() on a container that was previously ' +\n          'passed to ReactDOM.%s(). This is not supported. ' +\n          'Did you mean to call root.render(element)?',\n        enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n      );\n    }\n    return legacyRenderSubtreeIntoContainer(\n      null,\n      element,\n      container,\n      false,\n      callback,\n    );\n  },\n\n  unstable_renderSubtreeIntoContainer(\n    parentComponent: React$Component<any, any>,\n    element: React$Element<any>,\n    containerNode: DOMContainer,\n    callback: ?Function,\n  ) {\n    invariant(\n      isValidContainer(containerNode),\n      'Target container is not a DOM element.',\n    );\n    invariant(\n      parentComponent != null && hasInstance(parentComponent),\n      'parentComponent must be a valid React Component',\n    );\n    return legacyRenderSubtreeIntoContainer(\n      parentComponent,\n      element,\n      containerNode,\n      false,\n      callback,\n    );\n  },\n\n  unmountComponentAtNode(container: DOMContainer) {\n    invariant(\n      isValidContainer(container),\n      'unmountComponentAtNode(...): Target container is not a DOM element.',\n    );\n\n    if (__DEV__) {\n      warningWithoutStack(\n        !container._reactHasBeenPassedToCreateRootDEV,\n        'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' +\n          'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?',\n        enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n      );\n    }\n\n    if (container._reactRootContainer) {\n      if (__DEV__) {\n        const rootEl = getReactRootElementInContainer(container);\n        const renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);\n        warningWithoutStack(\n          !renderedByDifferentReact,\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by another copy of React.',\n        );\n      }\n\n      // Unmount should not be batched.\n      unbatchedUpdates(() => {\n        legacyRenderSubtreeIntoContainer(null, null, container, false, () => {\n          container._reactRootContainer = null;\n        });\n      });\n      // If you call unmountComponentAtNode twice in quick succession, you'll\n      // get `true` twice. That's probably fine?\n      return true;\n    } else {\n      if (__DEV__) {\n        const rootEl = getReactRootElementInContainer(container);\n        const hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));\n\n        // Check if the container itself is a React root node.\n        const isContainerReactRoot =\n          container.nodeType === ELEMENT_NODE &&\n          isValidContainer(container.parentNode) &&\n          !!container.parentNode._reactRootContainer;\n\n        warningWithoutStack(\n          !hasNonRootReactChild,\n          \"unmountComponentAtNode(): The node you're attempting to unmount \" +\n            'was rendered by React and is not a top-level container. %s',\n          isContainerReactRoot\n            ? 'You may have accidentally passed in a React root node instead ' +\n              'of its container.'\n            : 'Instead, have the parent component update its state and ' +\n              'rerender in order to remove this component.',\n        );\n      }\n\n      return false;\n    }\n  },\n\n  // Temporary alias since we already shipped React 16 RC with it.\n  // TODO: remove in React 17.\n  unstable_createPortal(...args) {\n    if (!didWarnAboutUnstableCreatePortal) {\n      didWarnAboutUnstableCreatePortal = true;\n      lowPriorityWarning(\n        false,\n        'The ReactDOM.unstable_createPortal() alias has been deprecated, ' +\n          'and will be removed in React 17+. Update your code to use ' +\n          'ReactDOM.createPortal() instead. It has the exact same API, ' +\n          'but without the \"unstable_\" prefix.',\n      );\n    }\n    return createPortal(...args);\n  },\n\n  unstable_batchedUpdates: batchedUpdates,\n\n  // TODO remove this legacy method, unstable_discreteUpdates replaces it\n  unstable_interactiveUpdates: (fn, a, b, c) => {\n    flushDiscreteUpdates();\n    return discreteUpdates(fn, a, b, c);\n  },\n\n  unstable_discreteUpdates: discreteUpdates,\n  unstable_flushDiscreteUpdates: flushDiscreteUpdates,\n\n  flushSync: flushSync,\n\n  unstable_createRoot: createRoot,\n  unstable_createSyncRoot: createSyncRoot,\n  unstable_flushControlled: flushControlled,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    // Keep in sync with ReactDOMUnstableNativeDependencies.js\n    // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.\n    Events: [\n      getInstanceFromNode,\n      getNodeFromInstance,\n      getFiberCurrentPropsFromNode,\n      EventPluginHubInjection.injectEventPluginsByName,\n      eventNameDispatchConfigs,\n      accumulateTwoPhaseDispatches,\n      accumulateDirectDispatches,\n      enqueueStateRestore,\n      restoreStateIfNeeded,\n      dispatchEvent,\n      runEventsInBatch,\n      flushPassiveEffects,\n      IsThisRendererActing,\n    ],\n  },\n};\n\ntype RootOptions = {\n  hydrate?: boolean,\n  hydrationOptions?: {\n    onHydrated?: (suspenseNode: Comment) => void,\n    onDeleted?: (suspenseNode: Comment) => void,\n  },\n};\n\nfunction createRoot(\n  container: DOMContainer,\n  options?: RootOptions,\n): _ReactRoot {\n  const functionName = enableStableConcurrentModeAPIs\n    ? 'createRoot'\n    : 'unstable_createRoot';\n  invariant(\n    isValidContainer(container),\n    '%s(...): Target container is not a DOM element.',\n    functionName,\n  );\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactRoot(container, options);\n}\n\nfunction createSyncRoot(\n  container: DOMContainer,\n  options?: RootOptions,\n): _ReactSyncRoot {\n  const functionName = enableStableConcurrentModeAPIs\n    ? 'createRoot'\n    : 'unstable_createRoot';\n  invariant(\n    isValidContainer(container),\n    '%s(...): Target container is not a DOM element.',\n    functionName,\n  );\n  warnIfReactDOMContainerInDEV(container);\n  return new ReactSyncRoot(container, BatchedRoot, options);\n}\n\nfunction warnIfReactDOMContainerInDEV(container) {\n  if (__DEV__) {\n    warningWithoutStack(\n      !container._reactRootContainer,\n      'You are calling ReactDOM.%s() on a container that was previously ' +\n        'passed to ReactDOM.render(). This is not supported.',\n      enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot',\n    );\n    container._reactHasBeenPassedToCreateRootDEV = true;\n  }\n}\n\nif (enableStableConcurrentModeAPIs) {\n  ReactDOM.createRoot = createRoot;\n  ReactDOM.createSyncRoot = createSyncRoot;\n}\n\nconst foundDevTools = injectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-dom',\n});\n\nif (__DEV__) {\n  if (!foundDevTools && canUseDOM && window.top === window.self) {\n    // If we're in Chrome or Firefox, provide a download link if not installed.\n    if (\n      (navigator.userAgent.indexOf('Chrome') > -1 &&\n        navigator.userAgent.indexOf('Edge') === -1) ||\n      navigator.userAgent.indexOf('Firefox') > -1\n    ) {\n      const protocol = window.location.protocol;\n      // Don't warn in exotic cases like chrome-extension://.\n      if (/^(https?|file):$/.test(protocol)) {\n        console.info(\n          '%cDownload the React DevTools ' +\n            'for a better development experience: ' +\n            'https://fb.me/react-devtools' +\n            (protocol === 'file:'\n              ? '\\nYou might need to use a local HTTP server (instead of file://): ' +\n                'https://fb.me/react-devtools-faq'\n              : ''),\n          'font-weight:bold',\n        );\n      }\n    }\n  }\n}\n\nexport default ReactDOM;\n"]},"metadata":{},"sourceType":"module"}