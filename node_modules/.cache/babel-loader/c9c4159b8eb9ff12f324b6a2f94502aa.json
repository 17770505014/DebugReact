{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { enableProfilerTimer } from 'shared/ReactFeatureFlags';\nimport { requestCurrentTime } from './ReactFiberWorkLoop';\nimport { inferPriorityFromExpirationTime } from './ReactFiberExpirationTime';\nimport { DidCapture } from 'shared/ReactSideEffectTags';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nlet onCommitFiberRoot = null;\nlet onCommitFiberUnmount = null;\nlet hasLoggedError = false;\nexport const isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\nexport function injectInternals(internals) {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      warningWithoutStack(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');\n    } // DevTools exists, even though it doesn't support Fiber.\n\n\n    return true;\n  }\n\n  try {\n    const rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.\n\n    onCommitFiberRoot = (root, expirationTime) => {\n      try {\n        const didError = (root.current.effectTag & DidCapture) === DidCapture;\n\n        if (enableProfilerTimer) {\n          const currentTime = requestCurrentTime();\n          const priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);\n          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);\n        } else {\n          hook.onCommitFiberRoot(rendererID, root, undefined, didError);\n        }\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          warningWithoutStack(false, 'React DevTools encountered an error: %s', err);\n        }\n      }\n    };\n\n    onCommitFiberUnmount = fiber => {\n      try {\n        hook.onCommitFiberUnmount(rendererID, fiber);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          warningWithoutStack(false, 'React DevTools encountered an error: %s', err);\n        }\n      }\n    };\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      warningWithoutStack(false, 'React DevTools encountered an error: %s.', err);\n    }\n  } // DevTools exists\n\n\n  return true;\n}\nexport function onCommitRoot(root, expirationTime) {\n  if (typeof onCommitFiberRoot === 'function') {\n    onCommitFiberRoot(root, expirationTime);\n  }\n}\nexport function onCommitUnmount(fiber) {\n  if (typeof onCommitFiberUnmount === 'function') {\n    onCommitFiberUnmount(fiber);\n  }\n}","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/react-reconciler/src/ReactFiberDevToolsHook.js"],"names":["enableProfilerTimer","requestCurrentTime","inferPriorityFromExpirationTime","DidCapture","warningWithoutStack","onCommitFiberRoot","onCommitFiberUnmount","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","__DEV__","rendererID","inject","root","expirationTime","didError","current","effectTag","currentTime","priorityLevel","undefined","err","fiber","onCommitRoot","onCommitUnmount"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\nimport {requestCurrentTime} from './ReactFiberWorkLoop';\nimport {inferPriorityFromExpirationTime} from './ReactFiberExpirationTime';\n\nimport type {Fiber} from './ReactFiber';\nimport type {FiberRoot} from './ReactFiberRoot';\nimport type {ExpirationTime} from './ReactFiberExpirationTime';\n\nimport {DidCapture} from 'shared/ReactSideEffectTags';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet onCommitFiberRoot = null;\nlet onCommitFiberUnmount = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      warningWithoutStack(\n        false,\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://fb.me/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    const rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    onCommitFiberRoot = (root, expirationTime) => {\n      try {\n        const didError = (root.current.effectTag & DidCapture) === DidCapture;\n        if (enableProfilerTimer) {\n          const currentTime = requestCurrentTime();\n          const priorityLevel = inferPriorityFromExpirationTime(\n            currentTime,\n            expirationTime,\n          );\n          hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);\n        } else {\n          hook.onCommitFiberRoot(rendererID, root, undefined, didError);\n        }\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          warningWithoutStack(\n            false,\n            'React DevTools encountered an error: %s',\n            err,\n          );\n        }\n      }\n    };\n    onCommitFiberUnmount = fiber => {\n      try {\n        hook.onCommitFiberUnmount(rendererID, fiber);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          warningWithoutStack(\n            false,\n            'React DevTools encountered an error: %s',\n            err,\n          );\n        }\n      }\n    };\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      warningWithoutStack(\n        false,\n        'React DevTools encountered an error: %s.',\n        err,\n      );\n    }\n  }\n  // DevTools exists\n  return true;\n}\n\nexport function onCommitRoot(root: FiberRoot, expirationTime: ExpirationTime) {\n  if (typeof onCommitFiberRoot === 'function') {\n    onCommitFiberRoot(root, expirationTime);\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (typeof onCommitFiberUnmount === 'function') {\n    onCommitFiberUnmount(fiber);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}