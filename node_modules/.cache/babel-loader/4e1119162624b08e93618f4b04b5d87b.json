{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { DiscreteEvent, UserBlockingEvent, ContinuousEvent } from 'shared/ReactTypes';\nimport { accumulateTwoPhaseDispatches } from 'legacy-events/EventPropagators';\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport warningWithoutStack from 'shared/warningWithoutStack';\nimport SyntheticAnimationEvent from './SyntheticAnimationEvent';\nimport SyntheticClipboardEvent from './SyntheticClipboardEvent';\nimport SyntheticFocusEvent from './SyntheticFocusEvent';\nimport SyntheticKeyboardEvent from './SyntheticKeyboardEvent';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport SyntheticDragEvent from './SyntheticDragEvent';\nimport SyntheticTouchEvent from './SyntheticTouchEvent';\nimport SyntheticTransitionEvent from './SyntheticTransitionEvent';\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport SyntheticWheelEvent from './SyntheticWheelEvent';\nimport getEventCharCode from './getEventCharCode';\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: [TOP_ABORT],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = new Map([\n *   [TOP_ABORT, { sameConfig }],\n * ]);\n */\n\nconst eventTuples = [// Discrete events\n[DOMTopLevelEventTypes.TOP_BLUR, 'blur', DiscreteEvent], [DOMTopLevelEventTypes.TOP_CANCEL, 'cancel', DiscreteEvent], [DOMTopLevelEventTypes.TOP_CLICK, 'click', DiscreteEvent], [DOMTopLevelEventTypes.TOP_CLOSE, 'close', DiscreteEvent], [DOMTopLevelEventTypes.TOP_CONTEXT_MENU, 'contextMenu', DiscreteEvent], [DOMTopLevelEventTypes.TOP_COPY, 'copy', DiscreteEvent], [DOMTopLevelEventTypes.TOP_CUT, 'cut', DiscreteEvent], [DOMTopLevelEventTypes.TOP_AUX_CLICK, 'auxClick', DiscreteEvent], [DOMTopLevelEventTypes.TOP_DOUBLE_CLICK, 'doubleClick', DiscreteEvent], [DOMTopLevelEventTypes.TOP_DRAG_END, 'dragEnd', DiscreteEvent], [DOMTopLevelEventTypes.TOP_DRAG_START, 'dragStart', DiscreteEvent], [DOMTopLevelEventTypes.TOP_DROP, 'drop', DiscreteEvent], [DOMTopLevelEventTypes.TOP_FOCUS, 'focus', DiscreteEvent], [DOMTopLevelEventTypes.TOP_INPUT, 'input', DiscreteEvent], [DOMTopLevelEventTypes.TOP_INVALID, 'invalid', DiscreteEvent], [DOMTopLevelEventTypes.TOP_KEY_DOWN, 'keyDown', DiscreteEvent], [DOMTopLevelEventTypes.TOP_KEY_PRESS, 'keyPress', DiscreteEvent], [DOMTopLevelEventTypes.TOP_KEY_UP, 'keyUp', DiscreteEvent], [DOMTopLevelEventTypes.TOP_MOUSE_DOWN, 'mouseDown', DiscreteEvent], [DOMTopLevelEventTypes.TOP_MOUSE_UP, 'mouseUp', DiscreteEvent], [DOMTopLevelEventTypes.TOP_PASTE, 'paste', DiscreteEvent], [DOMTopLevelEventTypes.TOP_PAUSE, 'pause', DiscreteEvent], [DOMTopLevelEventTypes.TOP_PLAY, 'play', DiscreteEvent], [DOMTopLevelEventTypes.TOP_POINTER_CANCEL, 'pointerCancel', DiscreteEvent], [DOMTopLevelEventTypes.TOP_POINTER_DOWN, 'pointerDown', DiscreteEvent], [DOMTopLevelEventTypes.TOP_POINTER_UP, 'pointerUp', DiscreteEvent], [DOMTopLevelEventTypes.TOP_RATE_CHANGE, 'rateChange', DiscreteEvent], [DOMTopLevelEventTypes.TOP_RESET, 'reset', DiscreteEvent], [DOMTopLevelEventTypes.TOP_SEEKED, 'seeked', DiscreteEvent], [DOMTopLevelEventTypes.TOP_SUBMIT, 'submit', DiscreteEvent], [DOMTopLevelEventTypes.TOP_TOUCH_CANCEL, 'touchCancel', DiscreteEvent], [DOMTopLevelEventTypes.TOP_TOUCH_END, 'touchEnd', DiscreteEvent], [DOMTopLevelEventTypes.TOP_TOUCH_START, 'touchStart', DiscreteEvent], [DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, 'volumeChange', DiscreteEvent], // User-blocking events\n[DOMTopLevelEventTypes.TOP_DRAG, 'drag', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_DRAG_ENTER, 'dragEnter', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_DRAG_EXIT, 'dragExit', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_DRAG_LEAVE, 'dragLeave', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_DRAG_OVER, 'dragOver', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_MOUSE_MOVE, 'mouseMove', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_MOUSE_OUT, 'mouseOut', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_MOUSE_OVER, 'mouseOver', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_POINTER_MOVE, 'pointerMove', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_POINTER_OUT, 'pointerOut', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_POINTER_OVER, 'pointerOver', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_SCROLL, 'scroll', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_TOGGLE, 'toggle', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_TOUCH_MOVE, 'touchMove', UserBlockingEvent], [DOMTopLevelEventTypes.TOP_WHEEL, 'wheel', UserBlockingEvent], // Continuous events\n[DOMTopLevelEventTypes.TOP_ABORT, 'abort', ContinuousEvent], [DOMTopLevelEventTypes.TOP_ANIMATION_END, 'animationEnd', ContinuousEvent], [DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION, 'animationIteration', ContinuousEvent], [DOMTopLevelEventTypes.TOP_ANIMATION_START, 'animationStart', ContinuousEvent], [DOMTopLevelEventTypes.TOP_CAN_PLAY, 'canPlay', ContinuousEvent], [DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH, 'canPlayThrough', ContinuousEvent], [DOMTopLevelEventTypes.TOP_DURATION_CHANGE, 'durationChange', ContinuousEvent], [DOMTopLevelEventTypes.TOP_EMPTIED, 'emptied', ContinuousEvent], [DOMTopLevelEventTypes.TOP_ENCRYPTED, 'encrypted', ContinuousEvent], [DOMTopLevelEventTypes.TOP_ENDED, 'ended', ContinuousEvent], [DOMTopLevelEventTypes.TOP_ERROR, 'error', ContinuousEvent], [DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture', ContinuousEvent], [DOMTopLevelEventTypes.TOP_LOAD, 'load', ContinuousEvent], [DOMTopLevelEventTypes.TOP_LOADED_DATA, 'loadedData', ContinuousEvent], [DOMTopLevelEventTypes.TOP_LOADED_METADATA, 'loadedMetadata', ContinuousEvent], [DOMTopLevelEventTypes.TOP_LOAD_START, 'loadStart', ContinuousEvent], [DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture', ContinuousEvent], [DOMTopLevelEventTypes.TOP_PLAYING, 'playing', ContinuousEvent], [DOMTopLevelEventTypes.TOP_PROGRESS, 'progress', ContinuousEvent], [DOMTopLevelEventTypes.TOP_SEEKING, 'seeking', ContinuousEvent], [DOMTopLevelEventTypes.TOP_STALLED, 'stalled', ContinuousEvent], [DOMTopLevelEventTypes.TOP_SUSPEND, 'suspend', ContinuousEvent], [DOMTopLevelEventTypes.TOP_TIME_UPDATE, 'timeUpdate', ContinuousEvent], [DOMTopLevelEventTypes.TOP_TRANSITION_END, 'transitionEnd', ContinuousEvent], [DOMTopLevelEventTypes.TOP_WAITING, 'waiting', ContinuousEvent]];\nconst eventTypes = {};\nconst topLevelEventsToDispatchConfig = {};\n\nfor (let i = 0; i < eventTuples.length; i++) {\n  const eventTuple = eventTuples[i];\n  const topEvent = eventTuple[0];\n  const event = eventTuple[1];\n  const eventPriority = eventTuple[2];\n  const capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  const onEvent = 'on' + capitalizedEvent;\n  const config = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent],\n    eventPriority\n  };\n  eventTypes[event] = config;\n  topLevelEventsToDispatchConfig[topEvent] = config;\n} // Only used in DEV for exhaustiveness validation.\n\n\nconst knownHTMLTopLevelTypes = [DOMTopLevelEventTypes.TOP_ABORT, DOMTopLevelEventTypes.TOP_CANCEL, DOMTopLevelEventTypes.TOP_CAN_PLAY, DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH, DOMTopLevelEventTypes.TOP_CLOSE, DOMTopLevelEventTypes.TOP_DURATION_CHANGE, DOMTopLevelEventTypes.TOP_EMPTIED, DOMTopLevelEventTypes.TOP_ENCRYPTED, DOMTopLevelEventTypes.TOP_ENDED, DOMTopLevelEventTypes.TOP_ERROR, DOMTopLevelEventTypes.TOP_INPUT, DOMTopLevelEventTypes.TOP_INVALID, DOMTopLevelEventTypes.TOP_LOAD, DOMTopLevelEventTypes.TOP_LOADED_DATA, DOMTopLevelEventTypes.TOP_LOADED_METADATA, DOMTopLevelEventTypes.TOP_LOAD_START, DOMTopLevelEventTypes.TOP_PAUSE, DOMTopLevelEventTypes.TOP_PLAY, DOMTopLevelEventTypes.TOP_PLAYING, DOMTopLevelEventTypes.TOP_PROGRESS, DOMTopLevelEventTypes.TOP_RATE_CHANGE, DOMTopLevelEventTypes.TOP_RESET, DOMTopLevelEventTypes.TOP_SEEKED, DOMTopLevelEventTypes.TOP_SEEKING, DOMTopLevelEventTypes.TOP_STALLED, DOMTopLevelEventTypes.TOP_SUBMIT, DOMTopLevelEventTypes.TOP_SUSPEND, DOMTopLevelEventTypes.TOP_TIME_UPDATE, DOMTopLevelEventTypes.TOP_TOGGLE, DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, DOMTopLevelEventTypes.TOP_WAITING];\nconst SimpleEventPlugin = {\n  eventTypes: eventTypes,\n\n  getEventPriority(topLevelType) {\n    const config = topLevelEventsToDispatchConfig[topLevelType];\n    return config !== undefined ? config.eventPriority : ContinuousEvent;\n  },\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    const dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\n    if (!dispatchConfig) {\n      return null;\n    }\n\n    let EventConstructor;\n\n    switch (topLevelType) {\n      case DOMTopLevelEventTypes.TOP_KEY_PRESS:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n\n      /* falls through */\n\n      case DOMTopLevelEventTypes.TOP_KEY_DOWN:\n      case DOMTopLevelEventTypes.TOP_KEY_UP:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_BLUR:\n      case DOMTopLevelEventTypes.TOP_FOCUS:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_CLICK:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n\n      /* falls through */\n\n      case DOMTopLevelEventTypes.TOP_AUX_CLICK:\n      case DOMTopLevelEventTypes.TOP_DOUBLE_CLICK:\n      case DOMTopLevelEventTypes.TOP_MOUSE_DOWN:\n      case DOMTopLevelEventTypes.TOP_MOUSE_MOVE:\n      case DOMTopLevelEventTypes.TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events\n\n      /* falls through */\n\n      case DOMTopLevelEventTypes.TOP_MOUSE_OUT:\n      case DOMTopLevelEventTypes.TOP_MOUSE_OVER:\n      case DOMTopLevelEventTypes.TOP_CONTEXT_MENU:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_DRAG:\n      case DOMTopLevelEventTypes.TOP_DRAG_END:\n      case DOMTopLevelEventTypes.TOP_DRAG_ENTER:\n      case DOMTopLevelEventTypes.TOP_DRAG_EXIT:\n      case DOMTopLevelEventTypes.TOP_DRAG_LEAVE:\n      case DOMTopLevelEventTypes.TOP_DRAG_OVER:\n      case DOMTopLevelEventTypes.TOP_DRAG_START:\n      case DOMTopLevelEventTypes.TOP_DROP:\n        EventConstructor = SyntheticDragEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_TOUCH_CANCEL:\n      case DOMTopLevelEventTypes.TOP_TOUCH_END:\n      case DOMTopLevelEventTypes.TOP_TOUCH_MOVE:\n      case DOMTopLevelEventTypes.TOP_TOUCH_START:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_ANIMATION_END:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_START:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_TRANSITION_END:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_SCROLL:\n        EventConstructor = SyntheticUIEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_WHEEL:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_COPY:\n      case DOMTopLevelEventTypes.TOP_CUT:\n      case DOMTopLevelEventTypes.TOP_PASTE:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n\n      case DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_POINTER_CANCEL:\n      case DOMTopLevelEventTypes.TOP_POINTER_DOWN:\n      case DOMTopLevelEventTypes.TOP_POINTER_MOVE:\n      case DOMTopLevelEventTypes.TOP_POINTER_OUT:\n      case DOMTopLevelEventTypes.TOP_POINTER_OVER:\n      case DOMTopLevelEventTypes.TOP_POINTER_UP:\n        EventConstructor = SyntheticPointerEvent;\n        break;\n\n      default:\n        if (__DEV__) {\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n            warningWithoutStack(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);\n          }\n        } // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n\n\n        EventConstructor = SyntheticEvent;\n        break;\n    }\n\n    const event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n};\nexport default SimpleEventPlugin;","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/react-dom/src/events/SimpleEventPlugin.js"],"names":["DiscreteEvent","UserBlockingEvent","ContinuousEvent","accumulateTwoPhaseDispatches","SyntheticEvent","DOMTopLevelEventTypes","warningWithoutStack","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticMouseEvent","SyntheticPointerEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticUIEvent","SyntheticWheelEvent","getEventCharCode","eventTuples","TOP_BLUR","TOP_CANCEL","TOP_CLICK","TOP_CLOSE","TOP_CONTEXT_MENU","TOP_COPY","TOP_CUT","TOP_AUX_CLICK","TOP_DOUBLE_CLICK","TOP_DRAG_END","TOP_DRAG_START","TOP_DROP","TOP_FOCUS","TOP_INPUT","TOP_INVALID","TOP_KEY_DOWN","TOP_KEY_PRESS","TOP_KEY_UP","TOP_MOUSE_DOWN","TOP_MOUSE_UP","TOP_PASTE","TOP_PAUSE","TOP_PLAY","TOP_POINTER_CANCEL","TOP_POINTER_DOWN","TOP_POINTER_UP","TOP_RATE_CHANGE","TOP_RESET","TOP_SEEKED","TOP_SUBMIT","TOP_TOUCH_CANCEL","TOP_TOUCH_END","TOP_TOUCH_START","TOP_VOLUME_CHANGE","TOP_DRAG","TOP_DRAG_ENTER","TOP_DRAG_EXIT","TOP_DRAG_LEAVE","TOP_DRAG_OVER","TOP_MOUSE_MOVE","TOP_MOUSE_OUT","TOP_MOUSE_OVER","TOP_POINTER_MOVE","TOP_POINTER_OUT","TOP_POINTER_OVER","TOP_SCROLL","TOP_TOGGLE","TOP_TOUCH_MOVE","TOP_WHEEL","TOP_ABORT","TOP_ANIMATION_END","TOP_ANIMATION_ITERATION","TOP_ANIMATION_START","TOP_CAN_PLAY","TOP_CAN_PLAY_THROUGH","TOP_DURATION_CHANGE","TOP_EMPTIED","TOP_ENCRYPTED","TOP_ENDED","TOP_ERROR","TOP_GOT_POINTER_CAPTURE","TOP_LOAD","TOP_LOADED_DATA","TOP_LOADED_METADATA","TOP_LOAD_START","TOP_LOST_POINTER_CAPTURE","TOP_PLAYING","TOP_PROGRESS","TOP_SEEKING","TOP_STALLED","TOP_SUSPEND","TOP_TIME_UPDATE","TOP_TRANSITION_END","TOP_WAITING","eventTypes","topLevelEventsToDispatchConfig","i","length","eventTuple","topEvent","event","eventPriority","capitalizedEvent","toUpperCase","slice","onEvent","config","phasedRegistrationNames","bubbled","captured","dependencies","knownHTMLTopLevelTypes","SimpleEventPlugin","getEventPriority","topLevelType","undefined","extractEvents","targetInst","nativeEvent","nativeEventTarget","dispatchConfig","EventConstructor","button","__DEV__","indexOf","getPooled"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {EventPriority} from 'shared/ReactTypes';\nimport type {\n  TopLevelType,\n  DOMTopLevelEventType,\n} from 'legacy-events/TopLevelEventTypes';\nimport type {\n  DispatchConfig,\n  ReactSyntheticEvent,\n} from 'legacy-events/ReactSyntheticEventType';\nimport type {Fiber} from 'react-reconciler/src/ReactFiber';\nimport type {EventTypes, PluginModule} from 'legacy-events/PluginModuleType';\n\nimport {\n  DiscreteEvent,\n  UserBlockingEvent,\n  ContinuousEvent,\n} from 'shared/ReactTypes';\nimport {accumulateTwoPhaseDispatches} from 'legacy-events/EventPropagators';\nimport SyntheticEvent from 'legacy-events/SyntheticEvent';\n\nimport * as DOMTopLevelEventTypes from './DOMTopLevelEventTypes';\nimport warningWithoutStack from 'shared/warningWithoutStack';\n\nimport SyntheticAnimationEvent from './SyntheticAnimationEvent';\nimport SyntheticClipboardEvent from './SyntheticClipboardEvent';\nimport SyntheticFocusEvent from './SyntheticFocusEvent';\nimport SyntheticKeyboardEvent from './SyntheticKeyboardEvent';\nimport SyntheticMouseEvent from './SyntheticMouseEvent';\nimport SyntheticPointerEvent from './SyntheticPointerEvent';\nimport SyntheticDragEvent from './SyntheticDragEvent';\nimport SyntheticTouchEvent from './SyntheticTouchEvent';\nimport SyntheticTransitionEvent from './SyntheticTransitionEvent';\nimport SyntheticUIEvent from './SyntheticUIEvent';\nimport SyntheticWheelEvent from './SyntheticWheelEvent';\nimport getEventCharCode from './getEventCharCode';\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: [TOP_ABORT],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = new Map([\n *   [TOP_ABORT, { sameConfig }],\n * ]);\n */\n\ntype EventTuple = [DOMTopLevelEventType, string, EventPriority];\n\nconst eventTuples: Array<EventTuple> = [\n  // Discrete events\n  [DOMTopLevelEventTypes.TOP_BLUR, 'blur', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_CANCEL, 'cancel', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_CLICK, 'click', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_CLOSE, 'close', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_CONTEXT_MENU, 'contextMenu', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_COPY, 'copy', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_CUT, 'cut', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_AUX_CLICK, 'auxClick', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_DOUBLE_CLICK, 'doubleClick', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_DRAG_END, 'dragEnd', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_DRAG_START, 'dragStart', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_DROP, 'drop', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_FOCUS, 'focus', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_INPUT, 'input', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_INVALID, 'invalid', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_KEY_DOWN, 'keyDown', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_KEY_PRESS, 'keyPress', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_KEY_UP, 'keyUp', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_MOUSE_DOWN, 'mouseDown', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_MOUSE_UP, 'mouseUp', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_PASTE, 'paste', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_PAUSE, 'pause', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_PLAY, 'play', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_POINTER_CANCEL, 'pointerCancel', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_POINTER_DOWN, 'pointerDown', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_POINTER_UP, 'pointerUp', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_RATE_CHANGE, 'rateChange', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_RESET, 'reset', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_SEEKED, 'seeked', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_SUBMIT, 'submit', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_TOUCH_CANCEL, 'touchCancel', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_TOUCH_END, 'touchEnd', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_TOUCH_START, 'touchStart', DiscreteEvent],\n  [DOMTopLevelEventTypes.TOP_VOLUME_CHANGE, 'volumeChange', DiscreteEvent],\n\n  // User-blocking events\n  [DOMTopLevelEventTypes.TOP_DRAG, 'drag', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_DRAG_ENTER, 'dragEnter', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_DRAG_EXIT, 'dragExit', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_DRAG_LEAVE, 'dragLeave', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_DRAG_OVER, 'dragOver', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_MOUSE_MOVE, 'mouseMove', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_MOUSE_OUT, 'mouseOut', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_MOUSE_OVER, 'mouseOver', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_POINTER_MOVE, 'pointerMove', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_POINTER_OUT, 'pointerOut', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_POINTER_OVER, 'pointerOver', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_SCROLL, 'scroll', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_TOGGLE, 'toggle', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_TOUCH_MOVE, 'touchMove', UserBlockingEvent],\n  [DOMTopLevelEventTypes.TOP_WHEEL, 'wheel', UserBlockingEvent],\n\n  // Continuous events\n  [DOMTopLevelEventTypes.TOP_ABORT, 'abort', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_ANIMATION_END, 'animationEnd', ContinuousEvent],\n  [\n    DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION,\n    'animationIteration',\n    ContinuousEvent,\n  ],\n  [\n    DOMTopLevelEventTypes.TOP_ANIMATION_START,\n    'animationStart',\n    ContinuousEvent,\n  ],\n  [DOMTopLevelEventTypes.TOP_CAN_PLAY, 'canPlay', ContinuousEvent],\n  [\n    DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH,\n    'canPlayThrough',\n    ContinuousEvent,\n  ],\n  [\n    DOMTopLevelEventTypes.TOP_DURATION_CHANGE,\n    'durationChange',\n    ContinuousEvent,\n  ],\n  [DOMTopLevelEventTypes.TOP_EMPTIED, 'emptied', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_ENCRYPTED, 'encrypted', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_ENDED, 'ended', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_ERROR, 'error', ContinuousEvent],\n  [\n    DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE,\n    'gotPointerCapture',\n    ContinuousEvent,\n  ],\n  [DOMTopLevelEventTypes.TOP_LOAD, 'load', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_LOADED_DATA, 'loadedData', ContinuousEvent],\n  [\n    DOMTopLevelEventTypes.TOP_LOADED_METADATA,\n    'loadedMetadata',\n    ContinuousEvent,\n  ],\n  [DOMTopLevelEventTypes.TOP_LOAD_START, 'loadStart', ContinuousEvent],\n  [\n    DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE,\n    'lostPointerCapture',\n    ContinuousEvent,\n  ],\n  [DOMTopLevelEventTypes.TOP_PLAYING, 'playing', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_PROGRESS, 'progress', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_SEEKING, 'seeking', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_STALLED, 'stalled', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_SUSPEND, 'suspend', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_TIME_UPDATE, 'timeUpdate', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_TRANSITION_END, 'transitionEnd', ContinuousEvent],\n  [DOMTopLevelEventTypes.TOP_WAITING, 'waiting', ContinuousEvent],\n];\n\nconst eventTypes: EventTypes = {};\nconst topLevelEventsToDispatchConfig: {\n  [key: TopLevelType]: DispatchConfig,\n} = {};\n\nfor (let i = 0; i < eventTuples.length; i++) {\n  const eventTuple = eventTuples[i];\n  const topEvent = eventTuple[0];\n  const event = eventTuple[1];\n  const eventPriority = eventTuple[2];\n\n  const capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  const onEvent = 'on' + capitalizedEvent;\n\n  const config = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture',\n    },\n    dependencies: [topEvent],\n    eventPriority,\n  };\n  eventTypes[event] = config;\n  topLevelEventsToDispatchConfig[topEvent] = config;\n}\n\n// Only used in DEV for exhaustiveness validation.\nconst knownHTMLTopLevelTypes: Array<DOMTopLevelEventType> = [\n  DOMTopLevelEventTypes.TOP_ABORT,\n  DOMTopLevelEventTypes.TOP_CANCEL,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY,\n  DOMTopLevelEventTypes.TOP_CAN_PLAY_THROUGH,\n  DOMTopLevelEventTypes.TOP_CLOSE,\n  DOMTopLevelEventTypes.TOP_DURATION_CHANGE,\n  DOMTopLevelEventTypes.TOP_EMPTIED,\n  DOMTopLevelEventTypes.TOP_ENCRYPTED,\n  DOMTopLevelEventTypes.TOP_ENDED,\n  DOMTopLevelEventTypes.TOP_ERROR,\n  DOMTopLevelEventTypes.TOP_INPUT,\n  DOMTopLevelEventTypes.TOP_INVALID,\n  DOMTopLevelEventTypes.TOP_LOAD,\n  DOMTopLevelEventTypes.TOP_LOADED_DATA,\n  DOMTopLevelEventTypes.TOP_LOADED_METADATA,\n  DOMTopLevelEventTypes.TOP_LOAD_START,\n  DOMTopLevelEventTypes.TOP_PAUSE,\n  DOMTopLevelEventTypes.TOP_PLAY,\n  DOMTopLevelEventTypes.TOP_PLAYING,\n  DOMTopLevelEventTypes.TOP_PROGRESS,\n  DOMTopLevelEventTypes.TOP_RATE_CHANGE,\n  DOMTopLevelEventTypes.TOP_RESET,\n  DOMTopLevelEventTypes.TOP_SEEKED,\n  DOMTopLevelEventTypes.TOP_SEEKING,\n  DOMTopLevelEventTypes.TOP_STALLED,\n  DOMTopLevelEventTypes.TOP_SUBMIT,\n  DOMTopLevelEventTypes.TOP_SUSPEND,\n  DOMTopLevelEventTypes.TOP_TIME_UPDATE,\n  DOMTopLevelEventTypes.TOP_TOGGLE,\n  DOMTopLevelEventTypes.TOP_VOLUME_CHANGE,\n  DOMTopLevelEventTypes.TOP_WAITING,\n];\n\nconst SimpleEventPlugin: PluginModule<MouseEvent> & {\n  getEventPriority: (topLevelType: TopLevelType) => EventPriority,\n} = {\n  eventTypes: eventTypes,\n\n  getEventPriority(topLevelType: TopLevelType): EventPriority {\n    const config = topLevelEventsToDispatchConfig[topLevelType];\n    return config !== undefined ? config.eventPriority : ContinuousEvent;\n  },\n\n  extractEvents: function(\n    topLevelType: TopLevelType,\n    targetInst: null | Fiber,\n    nativeEvent: MouseEvent,\n    nativeEventTarget: EventTarget,\n  ): null | ReactSyntheticEvent {\n    const dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    let EventConstructor;\n    switch (topLevelType) {\n      case DOMTopLevelEventTypes.TOP_KEY_PRESS:\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_KEY_DOWN:\n      case DOMTopLevelEventTypes.TOP_KEY_UP:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_BLUR:\n      case DOMTopLevelEventTypes.TOP_FOCUS:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_CLICK:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_AUX_CLICK:\n      case DOMTopLevelEventTypes.TOP_DOUBLE_CLICK:\n      case DOMTopLevelEventTypes.TOP_MOUSE_DOWN:\n      case DOMTopLevelEventTypes.TOP_MOUSE_MOVE:\n      case DOMTopLevelEventTypes.TOP_MOUSE_UP:\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case DOMTopLevelEventTypes.TOP_MOUSE_OUT:\n      case DOMTopLevelEventTypes.TOP_MOUSE_OVER:\n      case DOMTopLevelEventTypes.TOP_CONTEXT_MENU:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_DRAG:\n      case DOMTopLevelEventTypes.TOP_DRAG_END:\n      case DOMTopLevelEventTypes.TOP_DRAG_ENTER:\n      case DOMTopLevelEventTypes.TOP_DRAG_EXIT:\n      case DOMTopLevelEventTypes.TOP_DRAG_LEAVE:\n      case DOMTopLevelEventTypes.TOP_DRAG_OVER:\n      case DOMTopLevelEventTypes.TOP_DRAG_START:\n      case DOMTopLevelEventTypes.TOP_DROP:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TOUCH_CANCEL:\n      case DOMTopLevelEventTypes.TOP_TOUCH_END:\n      case DOMTopLevelEventTypes.TOP_TOUCH_MOVE:\n      case DOMTopLevelEventTypes.TOP_TOUCH_START:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_ANIMATION_END:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_ITERATION:\n      case DOMTopLevelEventTypes.TOP_ANIMATION_START:\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_TRANSITION_END:\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_SCROLL:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_WHEEL:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_COPY:\n      case DOMTopLevelEventTypes.TOP_CUT:\n      case DOMTopLevelEventTypes.TOP_PASTE:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n      case DOMTopLevelEventTypes.TOP_GOT_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_LOST_POINTER_CAPTURE:\n      case DOMTopLevelEventTypes.TOP_POINTER_CANCEL:\n      case DOMTopLevelEventTypes.TOP_POINTER_DOWN:\n      case DOMTopLevelEventTypes.TOP_POINTER_MOVE:\n      case DOMTopLevelEventTypes.TOP_POINTER_OUT:\n      case DOMTopLevelEventTypes.TOP_POINTER_OVER:\n      case DOMTopLevelEventTypes.TOP_POINTER_UP:\n        EventConstructor = SyntheticPointerEvent;\n        break;\n      default:\n        if (__DEV__) {\n          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {\n            warningWithoutStack(\n              false,\n              'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' +\n                'is likely caused by a bug in React. Please file an issue.',\n              topLevelType,\n            );\n          }\n        }\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n    }\n    const event = EventConstructor.getPooled(\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n};\n\nexport default SimpleEventPlugin;\n"]},"metadata":{},"sourceType":"module"}