{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nexport const enableUserTimingAPI = __DEV__; // Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in Strict Mode.\n\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__; // To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__; // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\nexport const warnAboutDeprecatedLifecycles = true; // Gather advanced timing metrics for Profiler subtrees.\n\nexport const enableProfilerTimer = __PROFILE__; // Trace which interactions trigger each commit.\n\nexport const enableSchedulerTracing = __PROFILE__; // SSR experiments\n\nexport const enableSuspenseServerRenderer = __EXPERIMENTAL__;\nexport const enableSelectiveHydration = __EXPERIMENTAL__; // Only used in www builds.\n\nexport const enableSchedulerDebugging = false; // Only used in www builds.\n\nexport function addUserTimingListener() {\n  throw new Error('Not implemented.');\n} // Disable javascript: URL strings in href for XSS protection.\n\nexport const disableJavaScriptURLs = false; // React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\nexport const disableInputAttributeSyncing = false; // These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\n\nexport const exposeConcurrentModeAPIs = __EXPERIMENTAL__;\nexport const warnAboutShorthandPropertyCollision = false; // Experimental React Flare event system and event components support.\n\nexport const enableFlareAPI = false; // Experimental Host Component support.\n\nexport const enableFundamentalAPI = false; // Experimental Scope support.\n\nexport const enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\n\nexport const enableJSXTransformAPI = false; // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)\n// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version\n\nexport const warnAboutUnmockedScheduler = false; // For tests, we flush suspense fallbacks in an act scope;\n// *except* in some of our own tests, where we test incremental loading states.\n\nexport const flushSuspenseFallbacksInTests = true; // Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\n\nexport const enableSuspenseCallback = false; // Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\n\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\nexport const warnAboutStringRefs = false;\nexport const disableLegacyContext = false;\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\nexport const enableTrustedTypesIntegration = false; // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance\n\nexport const enableNativeTargetAsInstance = false;","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/shared/ReactFeatureFlags.js"],"names":["enableUserTimingAPI","__DEV__","debugRenderPhaseSideEffectsForStrictMode","replayFailedUnitOfWorkWithInvokeGuardedCallback","warnAboutDeprecatedLifecycles","enableProfilerTimer","__PROFILE__","enableSchedulerTracing","enableSuspenseServerRenderer","__EXPERIMENTAL__","enableSelectiveHydration","enableSchedulerDebugging","addUserTimingListener","Error","disableJavaScriptURLs","disableInputAttributeSyncing","exposeConcurrentModeAPIs","warnAboutShorthandPropertyCollision","enableFlareAPI","enableFundamentalAPI","enableScopeAPI","enableJSXTransformAPI","warnAboutUnmockedScheduler","flushSuspenseFallbacksInTests","enableSuspenseCallback","warnAboutDefaultPropsOnFunctionComponents","warnAboutStringRefs","disableLegacyContext","disableSchedulerTimeoutBasedOnReactExpirationTime","enableTrustedTypesIntegration","enableNativeTargetAsInstance"],"mappings":"AAAA;;;;;;;;AASA,OAAO,MAAMA,mBAAmB,GAAGC,OAA5B,C,CAEP;AACA;;AACA,OAAO,MAAMC,wCAAwC,GAAGD,OAAjD,C,CAEP;AACA;;AACA,OAAO,MAAME,+CAA+C,GAAGF,OAAxD,C,CAEP;;AACA,OAAO,MAAMG,6BAA6B,GAAG,IAAtC,C,CAEP;;AACA,OAAO,MAAMC,mBAAmB,GAAGC,WAA5B,C,CAEP;;AACA,OAAO,MAAMC,sBAAsB,GAAGD,WAA/B,C,CAEP;;AACA,OAAO,MAAME,4BAA4B,GAAGC,gBAArC;AACP,OAAO,MAAMC,wBAAwB,GAAGD,gBAAjC,C,CAEP;;AACA,OAAO,MAAME,wBAAwB,GAAG,KAAjC,C,CAEP;;AACA,OAAO,SAASC,qBAAT,GAAiC;AACtC,QAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACD,C,CAED;;AACA,OAAO,MAAMC,qBAAqB,GAAG,KAA9B,C,CAEP;AACA;;AACA,OAAO,MAAMC,4BAA4B,GAAG,KAArC,C,CAEP;AACA;;AACA,OAAO,MAAMC,wBAAwB,GAAGP,gBAAjC;AAEP,OAAO,MAAMQ,mCAAmC,GAAG,KAA5C,C,CAEP;;AACA,OAAO,MAAMC,cAAc,GAAG,KAAvB,C,CAEP;;AACA,OAAO,MAAMC,oBAAoB,GAAG,KAA7B,C,CAEP;;AACA,OAAO,MAAMC,cAAc,GAAG,KAAvB,C,CAEP;;AACA,OAAO,MAAMC,qBAAqB,GAAG,KAA9B,C,CAEP;AACA;;AACA,OAAO,MAAMC,0BAA0B,GAAG,KAAnC,C,CAEP;AACA;;AACA,OAAO,MAAMC,6BAA6B,GAAG,IAAtC,C,CAEP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,sBAAsB,GAAG,KAA/B,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,yCAAyC,GAAG,KAAlD;AACP,OAAO,MAAMC,mBAAmB,GAAG,KAA5B;AAEP,OAAO,MAAMC,oBAAoB,GAAG,KAA7B;AAEP,OAAO,MAAMC,iDAAiD,GAAG,KAA1D;AAEP,OAAO,MAAMC,6BAA6B,GAAG,KAAtC,C,CAEP;;AACA,OAAO,MAAMC,4BAA4B,GAAG,KAArC","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n */\n\nexport const enableUserTimingAPI = __DEV__;\n\n// Helps identify side effects in render-phase lifecycle hooks and setState\n// reducers by double invoking them in Strict Mode.\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\nexport const warnAboutDeprecatedLifecycles = true;\n\n// Gather advanced timing metrics for Profiler subtrees.\nexport const enableProfilerTimer = __PROFILE__;\n\n// Trace which interactions trigger each commit.\nexport const enableSchedulerTracing = __PROFILE__;\n\n// SSR experiments\nexport const enableSuspenseServerRenderer = __EXPERIMENTAL__;\nexport const enableSelectiveHydration = __EXPERIMENTAL__;\n\n// Only used in www builds.\nexport const enableSchedulerDebugging = false;\n\n// Only used in www builds.\nexport function addUserTimingListener() {\n  throw new Error('Not implemented.');\n}\n\n// Disable javascript: URL strings in href for XSS protection.\nexport const disableJavaScriptURLs = false;\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\nexport const disableInputAttributeSyncing = false;\n\n// These APIs will no longer be \"unstable\" in the upcoming 16.7 release,\n// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.\nexport const exposeConcurrentModeAPIs = __EXPERIMENTAL__;\n\nexport const warnAboutShorthandPropertyCollision = false;\n\n// Experimental React Flare event system and event components support.\nexport const enableFlareAPI = false;\n\n// Experimental Host Component support.\nexport const enableFundamentalAPI = false;\n\n// Experimental Scope support.\nexport const enableScopeAPI = false;\n\n// New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107\nexport const enableJSXTransformAPI = false;\n\n// We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)\n// Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version\nexport const warnAboutUnmockedScheduler = false;\n\n// For tests, we flush suspense fallbacks in an act scope;\n// *except* in some of our own tests, where we test incremental loading states.\nexport const flushSuspenseFallbacksInTests = true;\n\n// Add a callback property to suspense to notify which promises are currently\n// in the update queue. This allows reporting and tracing of what is causing\n// the user to see a loading state.\n// Also allows hydration callbacks to fire when a dehydrated boundary gets\n// hydrated or deleted.\nexport const enableSuspenseCallback = false;\n\n// Part of the simplification of React.createElement so we can eventually move\n// from React.createElement to React.jsx\n// https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\nexport const warnAboutStringRefs = false;\n\nexport const disableLegacyContext = false;\n\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\n\nexport const enableTrustedTypesIntegration = false;\n\n// Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance\nexport const enableNativeTargetAsInstance = false;\n"]},"metadata":{},"sourceType":"module"}