{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport warning from 'shared/warning';\nimport { ATTRIBUTE_NAME_CHAR } from './DOMProperty';\nimport isCustomComponent from './isCustomComponent';\nimport validAriaProperties from './validAriaProperties';\nconst warnedProperties = {};\nconst rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nconst rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction validateProperty(tagName, name) {\n  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n    return true;\n  }\n\n  if (rARIACamel.test(name)) {\n    const ariaName = 'aria-' + name.slice(4).toLowerCase();\n    const correctName = validAriaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n\n    if (correctName == null) {\n      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);\n      warnedProperties[name] = true;\n      return true;\n    } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n    if (name !== correctName) {\n      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  if (rARIA.test(name)) {\n    const lowerCasedName = name.toLowerCase();\n    const standardName = validAriaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n\n    if (standardName == null) {\n      warnedProperties[name] = true;\n      return false;\n    } // aria-* attributes should be lowercase; suggest the lowercase version.\n\n\n    if (name !== standardName) {\n      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  const invalidProps = [];\n\n  for (const key in props) {\n    const isValid = validateProperty(type, key);\n\n    if (!isValid) {\n      invalidProps.push(key);\n    }\n  }\n\n  const unknownPropString = invalidProps.map(prop => '`' + prop + '`').join(', ');\n\n  if (invalidProps.length === 1) {\n    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n  } else if (invalidProps.length > 1) {\n    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);\n  }\n}\n\nexport function validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n\n  warnInvalidARIAProps(type, props);\n}","map":{"version":3,"sources":["/Users/gaoshaoyun/Documents/library/debug-react/src/react/packages/react-dom/src/shared/ReactDOMInvalidARIAHook.js"],"names":["warning","ATTRIBUTE_NAME_CHAR","isCustomComponent","validAriaProperties","warnedProperties","rARIA","RegExp","rARIACamel","hasOwnProperty","Object","prototype","validateProperty","tagName","name","call","test","ariaName","slice","toLowerCase","correctName","lowerCasedName","standardName","warnInvalidARIAProps","type","props","invalidProps","key","isValid","push","unknownPropString","map","prop","join","length","validateProperties"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport warning from 'shared/warning';\n\nimport {ATTRIBUTE_NAME_CHAR} from './DOMProperty';\nimport isCustomComponent from './isCustomComponent';\nimport validAriaProperties from './validAriaProperties';\n\nconst warnedProperties = {};\nconst rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');\nconst rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction validateProperty(tagName, name) {\n  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {\n    return true;\n  }\n\n  if (rARIACamel.test(name)) {\n    const ariaName = 'aria-' + name.slice(4).toLowerCase();\n    const correctName = validAriaProperties.hasOwnProperty(ariaName)\n      ? ariaName\n      : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (correctName == null) {\n      warning(\n        false,\n        'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.',\n        name,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== correctName) {\n      warning(\n        false,\n        'Invalid ARIA attribute `%s`. Did you mean `%s`?',\n        name,\n        correctName,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  if (rARIA.test(name)) {\n    const lowerCasedName = name.toLowerCase();\n    const standardName = validAriaProperties.hasOwnProperty(lowerCasedName)\n      ? lowerCasedName\n      : null;\n\n    // If this is an aria-* attribute, but is not listed in the known DOM\n    // DOM properties, then it is an invalid aria-* attribute.\n    if (standardName == null) {\n      warnedProperties[name] = true;\n      return false;\n    }\n    // aria-* attributes should be lowercase; suggest the lowercase version.\n    if (name !== standardName) {\n      warning(\n        false,\n        'Unknown ARIA attribute `%s`. Did you mean `%s`?',\n        name,\n        standardName,\n      );\n      warnedProperties[name] = true;\n      return true;\n    }\n  }\n\n  return true;\n}\n\nfunction warnInvalidARIAProps(type, props) {\n  const invalidProps = [];\n\n  for (const key in props) {\n    const isValid = validateProperty(type, key);\n    if (!isValid) {\n      invalidProps.push(key);\n    }\n  }\n\n  const unknownPropString = invalidProps\n    .map(prop => '`' + prop + '`')\n    .join(', ');\n\n  if (invalidProps.length === 1) {\n    warning(\n      false,\n      'Invalid aria prop %s on <%s> tag. ' +\n        'For details, see https://fb.me/invalid-aria-prop',\n      unknownPropString,\n      type,\n    );\n  } else if (invalidProps.length > 1) {\n    warning(\n      false,\n      'Invalid aria props %s on <%s> tag. ' +\n        'For details, see https://fb.me/invalid-aria-prop',\n      unknownPropString,\n      type,\n    );\n  }\n}\n\nexport function validateProperties(type, props) {\n  if (isCustomComponent(type, props)) {\n    return;\n  }\n  warnInvalidARIAProps(type, props);\n}\n"]},"metadata":{},"sourceType":"module"}